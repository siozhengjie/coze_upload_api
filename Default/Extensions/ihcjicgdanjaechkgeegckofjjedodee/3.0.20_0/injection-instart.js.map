{"version":3,"file":"injection-instart.js","mappings":"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","sources":["webpack://browser-guard/./guard-app/utils/polyfill.ts","webpack://browser-guard/webpack/bootstrap","webpack://browser-guard/webpack/runtime/define property getters","webpack://browser-guard/webpack/runtime/hasOwnProperty shorthand","webpack://browser-guard/webpack/runtime/make namespace object","webpack://browser-guard/./guard-app/app/scripts/injection-instart.js"],"sourcesContent":["// Define a unified type\ntype PolyBrowser = typeof chrome & typeof browser;\n\n// Set the global context to the window object if it exists, otherwise use self\nconst GLOBAL_CONTEXT = typeof window !== 'undefined' ? window : self;\n\n// Create a polyBrowser object\nconst polyBrowser: PolyBrowser = (GLOBAL_CONTEXT as any).chrome || GLOBAL_CONTEXT.browser || browser;\n\n// debug what user agent is being used and what is the browser\n\nlet idb: IDBFactory;\ntry {\n  idb = indexedDB || GLOBAL_CONTEXT.indexedDB;\n} catch (error:any) {\n  console.log(`Error initializing indexedDB: ${error.message}`);\n}\n\nconst performancePoly = performance || GLOBAL_CONTEXT.performance;\nconst URLPoly = URL || GLOBAL_CONTEXT.URL;\n\nexport {\n  polyBrowser as chrome,\n  idb as indexedDB,\n  performancePoly as performance,\n  URLPoly as URL,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var searchParams = new URLSearchParams(document.currentScript.src.split('?')[1]);\nvar mbExtId = searchParams.get('extId');\n\nconsole.debug(\"INS: Instart scanner loaded into \" + window.location.href + \" by \" + mbExtId);\n(function() {\n    function checkForInstartLogic(label) {\n        if (document.currentScript && document.currentScript.textContent) {\n            let scriptText = document.currentScript.textContent;\n            let keywords = [\"Instart\", \"instart\", \"INSTART\", \"I10C\", \"I11C\", \"I12C\", \"IXC_353_1119062411120848\"];\n            for (let keyword of keywords) {\n                if (scriptText.includes(keyword)) {\n                    throw new Error(\"Instart \" + label + \" Logic\");\n                }\n            }\n        }\n    }\n\n    function onHook(object, property) {\n        console.debug(\"INS: \" + property + \" hooked for \" + window.location.href);\n        let value = object[property];\n        Object.defineProperty(object, property, {\n            get: function() {\n                checkForInstartLogic(property); return value;\n            },\n            set: function(newValue) {\n                checkForInstartLogic(property); value = newValue;\n            }\n        });\n    }\n\n    function hook(object, property) {\n        console.debug(\"INS: Sending an is-whitelisted request about \" + property);\n        console.debug(\"INS: Extension ID \" + mbExtId);\n        if (window.chrome || window.browser || typeof browser !== 'undefined') {\n            const {chrome} = require('../../utils/polyfill.ts');\n            chrome.runtime.sendMessage(\n                mbExtId,\n                {type: \"isInstartWhitelisted\", parameters: {href: window.location.href, prop: property}},\n                (response) => {\n                    if (response && response.isWhitelisted) {\n                        console.debug(\"INS: \" + property + \" is whitelisted for \" + window.location.href);\n                    } else {\n                        if (chrome.runtime.lastError) {\n                            console.error(\n                                \"INS: Failed with is-whitelisted request for \" +\n                                property +\n                                \": \" +\n                                chrome.runtime.lastError.message\n                            );\n                        }\n                        onHook(object, property);\n                    }\n                }\n            );\n        } else {\n            // fallback to window.postMessage for Safari and Firefox\n            const params = {\n                href: window.location.href,\n                prop: property,\n            };\n            window.postMessage({\n                type: 'isInstartWhitelisted',\n                parameters: JSON.stringify(params),\n            }, `${window.location.protocol}//${window.location.host}`);\n        }\n    }\n\n    hook( window, \"INSTART\" );\n    hook( window, \"INSTART_TARGET_NAME\" );\n    hook( window, \"I10C\" );\n    hook( window, \"I11C\" );\n    hook( window, \"I12C\" );\n    hook( window, \"IXC_353_1119062411120848\" );\n\n    let oldSetTimeout = window.setTimeout;\n    window.setTimeout = function() {\n        checkForInstartLogic(\"Timeout\");\n        return oldSetTimeout.apply(window, arguments);\n    };\n\n    let oldSetInterval = window.setInterval;\n    window.setInterval = function() {\n        checkForInstartLogic(\"Interval\");\n        return oldSetInterval.apply( window, arguments );\n    };\n\n    window.addEventListener('message', (event) => {\n        if (!event.origin) {\n            return;\n        }\n        if (event.origin !== window.location.origin) {\n            return;\n        }\n        const originUrl = new URL(event.origin);\n        const eventHost = originUrl.host;\n        if (event.data.type === 'isInstartWhitelistedResponse' && eventHost === window.location.host) {\n            const params = JSON.parse(event.data.parameters);\n            if (params.isWhitelisted === false) {\n                onHook(window, params.property);\n            }\n        }\n    });\n})();\n"],"names":["GLOBAL_CONTEXT","window","self","polyBrowser","chrome","browser","idb","indexedDB","error","console","log","message","performancePoly","performance","URLPoly","URL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","mbExtId","URLSearchParams","document","currentScript","src","split","debug","location","href","checkForInstartLogic","label","textContent","scriptText","keywords","keyword","includes","Error","onHook","object","property","set","newValue","hook","require","runtime","sendMessage","type","parameters","response","isWhitelisted","lastError","params","postMessage","JSON","stringify","protocol","host","oldSetTimeout","setTimeout","apply","arguments","oldSetInterval","setInterval","addEventListener","event","origin","eventHost","data","parse"],"sourceRoot":""}