{"version":3,"file":"injection-tss-mv3.js","mappings":"qnBAAO,MAAMA,EAASA,CAACC,EAAOC,EAAgBC,KAE1CC,QAAQC,MAAM,GAAGF,+BACjBC,QAAQC,MAAM,GAAGF,mBAA0BF,GAG3C,IAAIK,GAAW,EACXC,GAAW,EACXC,EAAkB,CAAC,EACnBC,EAAgB,CAAC,EACjBC,EAAoB,CAAC,EACrBC,EAAuB,CAAC,EAE5B,SAASC,GAAQ,OAACC,EAAM,EAAEC,EAAC,QAAEC,EAAO,WAAEC,EAAU,MAAEC,EAAQC,EAAQ,gBAAEC,GAAkB,IAClF,IAAIC,EAAeP,EAAOC,GAC1BD,EAAOC,GAAK,WACR,GAAIR,IAAaC,GAAYY,EACzB,MAAM,IAAIE,MAAM,6CAEpB,IAAIC,EAAa,GAAGC,MAAMC,KAAKC,WAO/B,IANKlB,GAAYS,EAAWM,KACxBhB,GAAW,GAEXA,IAAaC,GAUzB,SAAgBQ,EAASO,GACrBI,OAAOC,IAAIC,YAAYC,KAAKC,MAAMD,KAAKE,UAAU,CAACC,KAAM,OAAQjB,UAASO,aAAYrB,WAAU,IACnG,CAXYgC,CAAOlB,EAASO,GAEhBhB,IAAaC,GAAYY,EACzB,MAAM,IAAIE,MAAM,6CAEpB,OAAOJ,EAAMG,EAAcc,KAAMZ,EACrC,CACJ,CAMA,SAASJ,EAAUE,EAAcP,EAAQS,GACrC,OAAOF,EAAae,MAAOtB,EAAQS,EACvC,CAGA,SAASc,EAAWC,EAAMC,EAAUC,GAChC,OAAOrC,EAAemC,EAAMC,EAAUC,EAC1C,CAYA,SAASC,EAAiBlB,GAEtB,OADAlB,QAAQC,MAAM,uCACPoC,GACX,CAEA,SAASA,EAAWC,GAGhB,OAFAtC,QAAQC,MAAO,uBAER+B,EAAY5B,EAAiB,IAAM,IAC9C,CAyBAI,EAAQ,CAACC,OAAQa,OAAQZ,EAAG,QAASC,QAAS,YAAaC,WA5C3D,SAAiB0B,GAEb,OADAtC,QAAQC,MAAM,qBACP+B,EAAW3B,EAAe,IAAO,EAC5C,IA0CAG,EAAQ,CAACC,OAAQa,OAAOiB,QAAS7B,EAAG,YAAaC,QAAS,cAAeC,WAxCzE,SAAuBM,GAEnB,OADAlB,QAAQC,MAAM,qCACPoC,GACX,IAsCAf,OAAOkB,YAAW,WACdhC,EACI,CAACC,OAAQa,OAAOiB,QAAS7B,EAAG,eAAgBC,QAAS,cAAeC,WAAYwB,GAExF,GAAG,KAEH5B,EAAQ,CAACC,OAAQgC,IAAK/B,EAAG,kBAAmBC,QAAS,gBAAiBC,WA1BtE,SAAsB0B,GAGlB,OAFAtC,QAAQC,MAAO,0BAER+B,EAAY1B,EAAmB,IAAM,IAChD,IAwBIgB,OAAOoB,QAAUpB,OAAOoB,OAAOC,UAC/BnC,EAAQ,CAEJC,OAAQiC,OAAOC,SACfjC,EAAG,UACHC,QAAS,mBACTC,WAvCR,SAAqB0B,GAEjB,OADAtC,QAAQC,MAAO,iCACR,CACX,EAqCQc,iBAAiB,IAIrBO,OAAOsB,cACPpC,EAAQ,CACJC,OAAQa,OAAOsB,aACflC,EAAG,oBACHC,QAAS,mBACTC,WAhCR,SAAyB0B,GAErB,OADAtC,QAAQC,MAAO,+CACR+B,EAAYzB,EAAsB,IAAM,EACnD,EA8BQQ,iBAAiB,IAKzBO,OAAOuB,iBAAkB,WACrB,SAAUC,GACDA,EAAMC,SAAWzB,QAAUwB,EAAMb,KAAKpC,QAAUA,GACxB,YAApBiD,EAAMb,KAAKL,OACZzB,GAAW,EAGvB,IAAG,ICjHuB6C,OAAOC,OAAO,CAC5CC,oBAAqB,EACrBC,iBAAkB,EAClBC,kBAAmB,EACnBC,yBAA0B,EAC1BC,qBAAsB,EACtBC,2BAA4B,EAC5BC,yBAA0B,IAEQR,OAAOC,OAAO,CAAC,EAAG,EAAG,IAoO/BD,OAAOC,OAAO,CACtCQ,QAAST,OAAOC,OAAO,CACnBrB,KAAM,UACN8B,iBAAkB,mBAClBC,gBAAiB,iBACjBC,eAAgB,gBAChBC,cAAe,eACfC,mBAAoB,oBACpBC,gBAAiB,kBACjBC,WAAY,YACZC,mBAAoB,mBACpBC,gBAAiB,gBACjBC,kBAAmB,mBACnBC,iBAAkB,iBAClBC,aAAc,cACdC,kBAAmB,mBACnBC,WAAY,YACZC,OAAQ,SACRC,WAAY,aACZC,OAAQ,SACRC,aAAc,eACdC,KAAM,OACNC,WAAY,aACZC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,wBAAyB,IAE7BC,KAAMlC,OAAOC,OAAO,CAChBrB,KAAM,OACNuD,IAAK,MACLC,eAAgB,iBAChBH,wBAAyB,IAG7BI,SAAUrC,OAAOC,OAAO,CACpBrB,KAAM,WACN0D,yBAA0B,2BAC1BC,iBAAkB,mBAClBC,eAAgB,iBAChBC,0BAA2B,4BAC3BC,0BAA2B,4BAE/BC,GAAI3C,OAAOC,OAAO,CACdrB,KAAM,KACNgE,SAAU,WACVX,wBAAyB,IAE7BY,IAAK7C,OAAOC,OAAO,CACfrB,KAAM,MACNgE,SAAU,WACVX,wBAAyB,MAITjC,OAAOC,OAAO,CAClC6C,OAAQ,SACRC,QAAS,UACTC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAGuBlD,OAAOC,OAAO,CAC7CkD,QAAS,CAAC,cACVC,YAAa,GACbC,qBAAsB,KA+BgB,IAAIC,OADZ,wBAGCtD,OAAOC,OAAO,CAC7CsD,OAAQvD,OAAOC,OAAO,CAClBkD,QAAS,GACTC,YAAa,CACT,SACA,YACA,UACA,OACA,wBACA,gCACA,mBACA,aACA,eACA,kBACA,YACA,YACA,gBACA,oBAGRI,QAASxD,OAAOC,OAAO,CACnBkD,QAAS,GACTC,YAAa,CACT,SACA,YACA,UACA,OACA,wBACA,gCACA,mBACA,aACA,qBACA,eACA,kBACA,YACA,gBACA,oBAGRK,KAAMzD,OAAOC,OAAO,CAChBkD,QAAS,GACTC,YAAa,CACT,SACA,YACA,kBACA,UACA,OACA,aACA,wBACA,gCACA,mBACA,eACA,YACA,gBACA,oBAGRM,OAAQ1D,OAAOC,OAAO,CAClBkD,QAAS,GACTC,YAAa,OAMuBpD,OAAOC,OAAO,CACtD0D,cAAe,CACXC,MAAO,yBACPC,YAAa,yBAEjBC,eAAgB,CACZF,MAAO,0BACPC,YAAa,0BAEjBE,OAAQ,CACJH,MAAO,SACPC,YAAa,UAEjBG,UAAW,CACPJ,MAAO,YACPC,YAAa,aAEjBI,QAAS,CACLL,MAAO,UACPC,YAAa,WAEjBK,KAAM,CACFN,MAAO,OACPC,YAAa,QAEjBM,sBAAuB,CACnBP,MAAO,wBACPC,YAAa,yBAEjBO,8BAA+B,CAC3BR,MAAO,gCACPC,YAAa,iCAEjBQ,iBAAkB,CACdT,MAAO,mBACPC,YAAa,oBAEjBS,WAAY,CACRV,MAAO,aACPC,YAAa,cAEjBU,aAAc,CACVX,MAAO,eACPC,YAAa,gBAEjBW,gBAAiB,CACbZ,MAAO,kBACPC,YAAa,mBAEjBY,UAAW,CACPb,MAAO,YACPC,YAAa,aAEjBa,UAAW,CACPd,MAAO,YACPC,YAAa,eChdV,IAAIc,SAASC,IAShBtG,OAAOuB,iBAAiB,WARxB,SAASgF,EAAU/E,GACXA,EAAMC,SAAWzB,QACjBwB,EAAMb,MDgN8B,yCChNtBa,EAAMb,KAAKL,OACzBN,OAAOwG,oBAAoB,UAAWD,GACtCD,EAAQ9E,EAAMb,KAAK8F,eAE3B,IAKgC,IAA5BzG,OAAO0G,SAASC,UAChB3G,OAAOE,YACH,CACII,KDqMuB,8BCpMvBsG,UAAW5G,OAAO0G,SAASC,SAC3BE,cDpBW,mBCsBf,QAOIC,MAAMC,IAClBA,EACArI,QAAQsI,IAAI,qDAiCZ1I,EAAO,SA9BgB2I,CAACtG,EAAMC,EAAUC,KACpCnC,QAAQC,MACJ,6BAA6BkC,wBAAgCD,mBAC7DD,GAGJ,MAAMuG,EAAWC,KAAKC,MACtB,GAAIzG,EAAK0G,SAEL,GADmBH,EAAWvG,EAAK0G,SAChBzG,GAEf,GADAD,EAAK2G,YACD3G,EAAK2G,WAAazG,EAClB,OAAO,OAGXF,EAAK0G,SAAWH,EAChBvG,EAAK2G,UAAY,MAElB,IAAkB,IAAdzG,EAGP,OAFAF,EAAK0G,SAAWH,EAChBvG,EAAK2G,UAAY,GACV,EAEP3G,EAAK0G,SAAWH,EAChBvG,EAAK2G,UAAY,CACrB,CACA,OAAO,IAGC,mB","sources":["webpack://browser-guard/./guard-app/app/scripts/tss-setup.js","webpack://browser-guard/./guard-app/app/scripts/app-consts.js","webpack://browser-guard/./guard-app/app/scripts/injection-tss-mv3.js"],"sourcesContent":["export const SetTss = (nonce, isRepeatedFunc, funcCtx) => {\n\n    console.debug(`${funcCtx} TSS: hosted page injected`);\n    console.debug(`${funcCtx} MBTSS: Nonce: `, nonce);\n\n    // hook functions\n    let detected = false;\n    let excluded = false;\n    let lastHistoryData = {};\n    let lastPrintData = {};\n    let lastCreateURLData = {};\n    let lastNotificationData = {};\n\n    function setHook({object, f, subtype, detectFunc, proxy = passthru, isBrowserlocker = true}) {\n        let originalFunc = object[f];\n        object[f] = function() {\n            if (detected && !excluded && isBrowserlocker) {\n                throw new Error('Breaking Browser Locker Behavior detected'); // Forces a failure of the original Function\n            }\n            let parameters = [].slice.call(arguments);\n            if (!excluded && detectFunc(parameters)) {\n                detected = true;\n            }\n            if (detected && !excluded) {\n                notify(subtype, parameters);\n            }\n            if (detected && !excluded && isBrowserlocker) {\n                throw new Error('Breaking Browser Locker Behavior detected'); // Forces a failure of the original Function\n            }\n            return proxy(originalFunc, this, parameters);\n        };\n    }\n\n    function notify(subtype, parameters) {\n        window.top.postMessage(JSON.parse(JSON.stringify({type: 'scam', subtype, parameters, nonce})), \"*\" );\n    }\n\n    function passthru( originalFunc, object, parameters ) {\n        return originalFunc.apply( object, parameters );\n    }\n\n\n    function isRepeated(data, interval, threshold) {\n        return isRepeatedFunc(data, interval, threshold);\n    }\n\n    function onPrint(_parameters) {\n        console.debug(\"TSS: caught print\");\n        return isRepeated(lastPrintData, 10000, 3);\n    }\n\n    function onHistoryPush(parameters) {\n        console.debug(\"TSS: Counted history being pushed\");\n        return onHistory(parameters);\n    }\n\n    function onHistoryReplace(parameters) {\n        console.debug(\"TSS: Counted history being replaced\");\n        return onHistory(parameters);\n    }\n\n    function onHistory( _parameters ) {\n        console.debug( \"TSS: Caught history\" );\n        // detect if >= 500 repeated history modifications within 1 second\n        return isRepeated( lastHistoryData, 1000, 500 );\n    }\n\n    function onWebstore( _parameters ) {\n        console.debug( \"TSS: Caught webstore install\" );\n        return true;\n    }\n\n    function onCreateURL( _parameters ) {\n        console.debug( \"TSS: Caught create URL\" );\n        // detect if >= 500 repeated URL creations within 1 second\n        return isRepeated( lastCreateURLData, 1000, 500 );\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    function onInstallXPI( _parameters ) {\n        console.debug( \"TSS: Caught install XPI\" );\n        return true;\n    }\n\n    function onNotification( _parameters ) {\n        console.debug( \"TSS: Caught notification permission request\" );\n        return isRepeated( lastNotificationData, 5000, 2 );\n    }\n\n    // set hooks\n    setHook({object: window, f: \"print\", subtype: \"printLoop\", detectFunc: onPrint});\n    setHook({object: window.history, f: \"pushState\", subtype: \"historyLoop\", detectFunc: onHistoryPush});\n    window.setTimeout(function() {\n        setHook(\n            {object: window.history, f: \"replaceState\", subtype: \"historyLoop\", detectFunc: onHistoryReplace}\n        );\n    }, 2000);\n\n    setHook({object: URL, f: \"createObjectURL\", subtype: \"createURLLoop\", detectFunc: onCreateURL});\n\n    if (window.chrome && window.chrome.webstore) {\n        setHook({\n            // eslint-disable-next-line no-undef\n            object: chrome.webstore,\n            f: \"install\",\n            subtype: \"extensionInstall\",\n            detectFunc: onWebstore,\n            isBrowserlocker: false\n        });\n    }\n\n    if (window.Notification) {\n        setHook({\n            object: window.Notification,\n            f: \"requestPermission\",\n            subtype: \"notificationLoop\",\n            detectFunc: onNotification,\n            isBrowserlocker: false\n        });\n    }\n\n    // listen for exclusions notifications\n    window.addEventListener( \"message\",\n        function( event ) {\n            if ( event.source === window && event.data.nonce === nonce ) {\n                if ( event.data.type === \"exclude\" ) {\n                    excluded = true;\n                }\n            }\n        }, false\n    );\n};\n","export const RELOAD_ON_CLOSE_PORT = 'RELOAD_ON_CLOSE_PORT';\nexport const MSG_ICON_REFRESH = 'MSG_ICON_REFRESH';\nexport const MSG_ICONS_REFRESH = 'MSG_ICONS_REFRESH';\n\nexport const EXCLUSION_MALWARE = 'EXCLUSION_MALWARE';\nexport const EXCLUSION_SCAMS = 'EXCLUSION_SCAMS';\nexport const EXCLUSION_ADS = 'EXCLUSION_ADS';\nexport const EXCLUSION_PUPS = 'EXCLUSION_PUPS';\nexport const EXCLUSION_TYPE_DOMAIN = 'domain';\nexport const GDPR_REMOVAL_FLAG = 'GDPR_REMOVAL_FLAG';\nexport const EXCLUSION_TYPE_DOMAIN_TEMPORARY = 'domain (temporary)';\nexport const BAD_PACKAGE_ERROR = \"BAD_PACKAGE_ERROR\"\nexport const MISSING_DATABASE_ERROR = \"MISSING_DATABASE_ERROR\"\nexport const LICENSE_FREE = 'LICENSE_FREE';\nexport const LICENSE_TRIAL = 'LICENSE_TRIAL';\nexport const LICENSE_PREMIUM = 'LICENSE_PREMIUM';\nexport const LICENSE_STATE_ENUM = Object.freeze({\n    LicenseStateUnknown: 0,\n    LicenseStateFree: 1,\n    LicenseStateTrial: 2,\n    LicenseStateTrialExpired: 3,\n    LicenseStateLicensed: 4,\n    LicenseStateLicenseExpired: 5,\n    LicenseStateLicenseGrace: 6\n});\nexport const PREMIUM_LICENSE_STATES = Object.freeze([2, 4, 6]);\nexport const SETTING_TELEMETRY_CONSENT = 'sendTelemetry';\nexport const SETTING_ADS = 'enableProtectionAds';\nexport const SETTING_GTLD = 'enableProtectionGtld';\nexport const SETTING_NATIVE_MESSAGING = 'enableNativeMessaging';\nexport const SETTING_MALWARE = 'enableProtectionMalware';\nexport const SETTING_SCAMS = 'enableProtectionScams';\nexport const SETTING_BLOCK_COUNT = 'enableBlockCountDisplay';\nexport const SETTING_KILLSWITCH = 'enableProtection';\nexport const SETTING_SKIMMER_PROTECTION = 'enableSkimmerProtection';\nexport const SETTING_VERBOSE_LOGGING = 'enableVerboseLogging';\nexport const SETTING_MONTHLY_NOTIFICATION = 'enableMonthlyNotification';\nexport const SETTING_MALICIOUS_NOTIFICATION = 'enableMaliciousNotification';\nexport const SETTING_BREACH_NOTIFICATION = 'enableBreachNotification';\nexport const SETTING_NEW_RELEASE_NOTIFICATION = 'enableNewReleaseNotification';\nexport const SETTING_SEARCH_HIJACKING_NOTIFICATION = 'enableSearchHijackingNotification';\nexport const SETTING_VISUAL_DEBUGGING = 'enableVisualDebugging';\nexport const SETTING_PING_TRACKER_REMOVER = 'enablePingTrackerRemover';\n\nexport const SETTING_FLAGS = {\n    [SETTING_KILLSWITCH]: 0x00000002, // Overall Protection status\n    [SETTING_ADS]: 0x00000004, // Ads/Trackers\n    [SETTING_MALWARE]: 0x00000008, // Malware\n    [SETTING_SCAMS]: 0x00000010, // Scams\n};\nexport const ALLOWED_EXCLUSION_OPTIONS = [\n    {\n        value: 2,\n        constantKey: EXCLUSION_ADS,\n        humanReadable: \"Ads / Trackers\"\n    },\n    {\n        value: 4,\n        constantKey: EXCLUSION_MALWARE,\n        humanReadable: \"Malware\"\n    },\n    {\n        value: 6,\n        constantKey: EXCLUSION_SCAMS,\n        humanReadable: \"Scams\"\n    },\n    {\n        value: 7,\n        constantKey: EXCLUSION_PUPS,\n        //Do not display PUPs label anymore\n        humanReadable: \"\"\n    }\n];\n\nexport const RELEASE_NOTIFICATION_DEAFULT_TEXT = 'Browser Guard has been updated!';\n\n//Change manually these release notes (current notes of v2.6.26)\nexport const RELEASE_NOTIFICATION_NOTES = [\n    'New release notifications',\n    'Auto deny GDPR consent trackers',\n    'Misc bug fixes'\n]\n\n//Change manually these release notes \nexport const RELEASE_NOTIFICATION_NOTES_MV3 = [\n    'Improve Heuristic protection',\n    'Improve Search Hijacking protection',\n    'Misc bug fixes' // this should always exist and be the last one.\n];\n\n\n// Feature flags that are enabled/disabled by the FEATURE_FLAGS DB\nexport const FLAG_ENABLE_BLOCK_EASYLIST_ADS = 'enableBlockEasylistAds';\nexport const FLAG_ENABLE_BLOCK_GDPR = 'enableBlockGdpr';\nexport const FLAG_ENABLE_BLOCK_LOCAL_PORT_SCANNING = 'enableBlockLocalPortScanning';\nexport const FLAG_ENABLE_BLOCK_YOUTUBE_CUSTOM_ADS = 'enableBlockYoutubeCustomAds';\nexport const FLAG_ENABLE_BREACH_NOTIFICATION = 'enableBreachNotification';\nexport const FLAG_ENABLE_SEARCH_HIJACKING_NOTIFICATION = 'enableSearchHijackingNotification';\nexport const FLAG_ENABLE_HEURISTIC_BLOCKING = 'enableHeuristicBlocking';\nexport const FLAG_ENABLE_SUSPICIOUS_POST_OR_PUT_DETECTION = 'enableSuspiciousPostOrPutDetection';\nexport const FLAG_ENABLE_SUSPICIOUS_TITLE_DETECTION = 'enableSuspiciousTitleDetection';\nexport const FLAG_ENABLE_PING_TRACKER_REMOVER = 'enablePingTrackerRemover';\n\nexport const FLAG_ENABLE_PREMIUM = 'FLAG_ENABLE_PREMIUM';\nexport const UPDATE_DB_MAX_ATTEMPS = 4;\n\nexport const MSG_FIREFOX = 'MSG_FIREFOX';\nexport const MSG_UUID_GET = 'MSG_UUID_GET';\nexport const MSG_INT_VER = 'MSG_INT_VER';\nexport const MSG_USER_GROUP_GET = 'MSG_USER_GROUP_GET';\nexport const MSG_IS_ONBOARDING_COMPLETE = 'MSG_IS_ONBOARDING_COMPLETE';\nexport const MSG_WEBSITE_CHECKBOX_GET = 'MSG_WEBSITE_CHECKBOX_GET';\nexport const MSG_SETTINGS_GET = 'MSG_SETTINGS_GET';\nexport const MSG_SETTINGS_SET = 'MSG_SETTINGS_SET';\nexport const MSG_IS_PREMIUM = 'MSG_IS_PREMIUM';\nexport const MSG_IS_TRIAL = 'MSG_IS_TRIAL';\nexport const MSG_TAB_DATA_GET = 'MSG_TAB_DATA_GET';\nexport const MSG_RECORDS_GET = 'MSG_RECORDS_GET';\nexport const MSG_GET_ALL_STATS = 'MSG_GET_ALL_STATS';\nexport const MSG_DEBUG_ADD_STATS = 'MSG_DEBUG_ADD_STATS';\nexport const MSG_DEBUG_CLEAR_STATS = 'MSG_DEBUG_CLEAR_STATS';\nexport const MSG_ADD_ALLOW = 'MSG_ADD_ALLOW';\nexport const MSG_SET_ALLOW_GRANULAR = 'MSG_SET_ALLOW_GRANULAR';\nexport const MSG_GET_ALLOW_GRANULAR = 'MSG_GET_ALLOW_GRANULAR';\nexport const MSG_ADD_ALLOW_TEMPORARY = 'MSG_ADD_ALLOW_TEMPORARY';\nexport const MSG_ALLOW_TEMPORARILY = 'MSG_ALLOW_TEMPORARILY';\nexport const MSG_ADD_ALLOW_META_ONLY = 'MSG_ADD_ALLOW_META_ONLY';\nexport const MSG_REM_ALLOW_ALL = 'MSG_REM_ALLOW_ALL';\nexport const MSG_REM_ALLOW_DOMAIN = 'MSG_REM_ALLOW_DOMAIN';\nexport const MSG_REM_ALLOW_SINGLE = 'MSG_REM_ALLOW_SINGLE';\nexport const MSG_ALLOW_GET_ALL = 'MSG_ALLOW_GET_ALL';\nexport const MSG_ALLOW_GET_SINGLE = 'MSG_ALLOW_GET_SINGLE';\nexport const MSG_IS_LAYER_ACTIVE = 'MSG_IS_LAYER_ACTIVE';\nexport const MSG_DOWNLOAD_LOGS = 'MSG_DOWNLOAD_LOGS';\nexport const MSG_FORCE_DATABASE_UPDATE = 'MSG_FORCE_DATABASE_UPDATE';\nexport const MSG_TAB_ID_GET = 'MSG_TAB_ID_GET';\nexport const MSG_TAB_INFO_GET = 'MSG_TAB_INFO_GET';\nexport const MSG_GET_HEURISTICS_DATABASE = \"MSG_GET_HEURISTICS_DATABASE\";\nexport const MSG_IS_NEEDING_NATIVE_MSG = 'MSG_IS_NEEDING_NATIVE_MSG';\nexport const MSG_TOGGLE_NATIVE_MSG = 'MSG_TOGGLE_NATIVE_MSG';\nexport const MSG_BADGE_COUNT_UPDATE = 'MSG_BADGE_COUNT_UPDATE';\nexport const MSG_RECORD_ARW = 'MSG_RECORD_ARW';\nexport const MSG_IS_AD_PROTECTION_ACTIVE = 'MSG_IS_AD_PROTECTION_ACTIVE';\nexport const MSG_GET_BLOCKED_ITEMS = 'MSG_GET_BLOCKED_ITEMS';\nexport const MSG_DELETE_BLOCKED_ITEM = 'MSG_DELETE_BLOCKED_ITEM';\nexport const MSG_DELETE_ALL_BLOCKED_ITEMS = 'MSG_DELETE_ALL_BLOCKED_ITEMS';\nexport const MSG_TELEMETRY_EMAIL_SHOWN = 'MSG_TELEMETRY_EMAIL_SHOWN';\nexport const MSG_TELEMETRY_EMAIL_SENT = 'MSG_TELEMETRY_EMAIL_SENT';\nexport const MSG_TELEMETRY_EMAIL_FAILED = 'MSG_TELEMETRY_EMAIL_FAILED';\nexport const MSG_MV3_LAST_TAB_URL = 'MSG_MV3_LAST_TAB_URL';\nexport const PORT_FORCE_DATABASE_UPDATE = 'PORT_FORCE_DATABASE_UPDATE';\nexport const GROUP_A = 'GROUP_A';\nexport const MSG_RESET = 'MSG_RESET';\nexport const MSG_RECORD_CONTENT_AD = 'MSG_RECORD_CONTENT_AD';\nexport const MSG_RECORD_EASYLIST_AD = 'MSG_RECORD_EASYLIST_AD';\nexport const MSG_RECORD_EASYLIST_PRIVACY = 'MSG_RECORD_EASYLIST_PRIVACY';\nexport const MSG_MV3_TOGGLE_PROTECTION = 'MSG_MV3_TOGGLE_PROTECTION';\nexport const MSG_MV3_TOGGLE_INDIVIDUAL_PROTECTION = 'MSG_MV3_TOGGLE_INDIVIDUAL_PROTECTION';\nexport const MSG_MV3_TOGGLE_GTLD_PROTECTION = 'MSG_MV3_TOGGLE_GTLD_PROTECTION';\nexport const MV3_PROTECTION_ADS = 'MV3_ADS';\nexport const MV3_PROTECTION_MALWARE = 'MV3_MALWARE';\nexport const MV3_PROTECTION_SCAMS = 'MV3_SCAMS';\nexport const SETTING_MV3_ENABLED_FEATURES = 'MV3_ENABLED_FEATURES';\nexport const MV3_FEATURE_ALL = 'MV3_FEATURE_ALL';\nexport const MV3_FEATURE_ADS_TRACKERS = 'ADS_TRACKERS';\nexport const MV3_FEATURE_EASYLIST = 'EASYLIST';\nexport const MV3_FEATURE_EASYLIST_PRIVACY = 'EASYLIST_PRIVACY';\nexport const MV3_FEATURE_MALWARE = 'MALWARE';\nexport const MV3_FEATURE_MONTHLY_NOTIFICATIONS = 'MONTHLY_NOTIFICATIONS ';\nexport const MV3_FEATURE_MALICIOUS_NOTIFICATIONS = 'MALICIOUS_NOTIFICATIONS';\nexport const MV3_FEATURE_NEW_RELEASE_NOTIFICATIONS = 'NEW_RELEASE_NOTIFICATIONS';\nexport const MV3_FEATURE_BREACH_NOTIFICATIONS = 'BREACH_NOTIFICATIONS';\nexport const MV3_FEATURE_SEARCH_HIJACKING_NOTIFICATIONS = 'SEARCH_HIJACKING_NOTIFICATIONS';\nexport const MSG_BREACH_NOTIFICATION = 'MSG_BREACH_NOTIFICATION';\nexport const MSG_MV3_INIT_WITH_IDS = 'MSG_MV3_INIT_WITH_IDS';\nexport const MSG_MV3_POST_NATIVE_EXCLUSION = 'MSG_MV3_POST_NATIVE_EXCLUSION';\nexport const MSG_INFO_BLOCKED_CONTENT = 'MSG_INFO_BLOCKED_CONTENT';\nexport const MSG_INFO_BLOCKED_CONTENT_DISPLAYED = 'MSG_INFO_BLOCKED_CONTENT_DISPLAYED';\nexport const MSG_INFO_BREACH_NOTIFICATION_DISPLAYED = 'MSG_INFO_BREACH_NOTIFICATION_DISPLAYED';\nexport const MSG_INFO_MONTHLY_NOTIFICATION = 'MSG_INFO_MONTHLY_NOTIFICATION';\nexport const MSG_INFO_RELEASE_NOTIFICATION = 'MSG_INFO_RELEASE_NOTIFICATION';\nexport const MSG_TOGGLE_VERBOSE_LOGGING = 'MSG_TOGGLE_VERBOSE_LOGGING';\nexport const MSG_CONTENT_CONTROL_GET_ALL = 'MSG_CONTENT_CONTROL_GET_ALL';\nexport const MSG_CONTENT_CONTROL_REMOVE_ITEM = 'MSG_CONTENT_CONTROL_REMOVE_ITEM';\nexport const MSG_CONTENT_CONTROL_ADD_ITEM = 'MSG_CONTENT_CONTROL_ADD_ITEM';\nexport const MSG_CONTENT_CONTROL_REMOVE_ALL = 'MSG_CONTENT_CONTROL_REMOVE_ALL';\nexport const MSG_DETECTION_HISTORY_GET_ALL = 'MSG_DETECTION_HISTORY_GET_ALL';\nexport const MSG_DETECTION_HISTORY_ADD_ITEM = 'MSG_DETECTION_HISTORY_ADD_ITEM';\nexport const MSG_DETECTION_HISTORY_REMOVE_ALL = 'MSG_DETECTION_HISTORY_REMOVE_ALL';\nexport const MSG_DETECTION_HISTORY_REMOVE_ITEM = 'MSG_DETECTION_HISTORY_REMOVE_ITEM';\nexport const MSG_IS_NEW_FEATURE_SEEN = 'MSG_IS_NEW_FEATURE_SEEN';\nexport const MSG_MARK_NEW_FEATURE_SEEN = 'MSG_MARK_NEW_FEATURE_SEEN';\nexport const FEAT_CONTENT_CONTROLS = 'contentControls';\nexport const FEAT_EXPORT_IMPORT = 'exportImport';\nexport const MSG_EXPORT_SETTINGS = 'MSG_EXPORT_SETTINGS';\nexport const MSG_IMPORT_SETTINGS = 'MSG_IMPORT_SETTINGS';\nexport const MSG_IS_WHITELISTED_SCAM = 'MSG_IS_WHITELISTED_SCAM';\nexport const MSG_DEBUG_TEST_CHANNEL = 'MSG_DEBUG_TEST_CHANNEL';\nexport const MSG_DEBUG_CHECK_URL = 'MSG_DEBUG_CHECK_URL';\nexport const MSG_DEBUG_ADD_HEURISTIC_RULE = 'MSG_DEBUG_ADD_HEURISTIC_RULE';\nexport const MSG_DEBUG_STAGING_CHANNEL = 'MSG_DEBUG_STAGING_CHANNEL';\nexport const MSG_DEBUG_STAGING_CHANNEL_RESPONSE = 'MSG_DEBUG_STAGING_CHANNEL_RESPONSE';\nexport const MSG_DEBUG_UPDATE_ERROR = 'MSG_DEBUG_UPDATE_ERROR';\nexport const MSG_COLOR_SCHEME_CHANGED = 'MSG_COLOR_SCHEME_CHANGED';\nexport const MSG_QUERY_FEATURE_FLAG = 'MSG_QUERY_FEATURE_FLAG';\nexport const MSG_LOAD_INLINE_SCRIPT = 'MSG_LOAD_INLINE_SCRIPT';\nexport const MSG_GET_EASYLIST_SELECTORS = 'MSG_GET_EASYLIST_SELECTORS';\nexport const MSG_GET_HEURISTICS_URLS_TO_BLOCK = 'MSG_GET_HEURISTICS_URLS_TO_BLOCK';\nexport const MSG_QUERY_EASYLIST = 'MSG_QUERY_EASYLIST';\nexport const MSG_IS_EXCLUDED = \"isExcluded\";\nexport const MSG_DETECTION = \"detection\";\nexport const MSG_TELEMETRY_PHISHING_TUNNEL = \"telemetryPhishingTunnel\";\nexport const MSG_CONTEXT_MENU_TARGET_URLS = \"context-menu-target-urls\";\nexport const MSG_UPDATE_PROTECTION_ON_PERM_CHANGE = \"MSG_UPDATE_PROTECTION_ON_PERM_CHANGE\";\nexport const SHOW_PERMISSION_REQUEST_ALARM = \"showPermissionRequestAlarm\";\nexport const IS_URL_PERM_REMOVED_FLAG = \"IS_URL_PERM_REMOVED_FLAG\";\nexport const MSG_CLOSE_POPUP = \"MSG_CLOSE_POPUP\";\nexport const MSG_RECORD_PING_TRACKER_REMOVAL = \"MSG_RECORD_PING_TRACKER_REMOVAL\";\nexport const MSG_CHECK_ALLOW_LIST_BY_TYPE_AND_DOMAIN = 'MSG_CHECK_ALLOW_LIST_BY_TYPE_AND_DOMAIN';\nexport const MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE = 'MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE';\nexport const MSG_CHECK_DOMAIN_ALLOW_LIST = 'MSG_CHECK_DOMAIN_ALLOW_LIST';\nexport const MSG_APPEND_CONSOLE_LOG = \"MSG_APPEND_CONSOLE_LOG\";\n\nexport const RecordType = {\n    AD: 'AD',\n    MALWARE: 'MALWARE',\n    SCAM: 'SCAM',\n    CONTENT: 'CONTENT',\n};\nexport const ATTRIBUTION_REPORTING = 'googleattributionreport';\nexport const HEURISTIC_AD_BLOCK = 'heuristic-ad-block';\nexport const EASYLIST_AD_BLOCK = 'easylist-ad-block';\nexport const EASYLIST_PRIVACY_BLOCK = 'easylist-privacy-block';\nexport const MSG_IS_ATTR_REPORTING_ACTIVE = 'MSG_IS_ATTR_REPORTING_ACTIVE';\nexport const MSG_IS_PING_TRACKER_REMOVER_ACTIVE = 'MSG_IS_PING_TRACKER_REMOVER_ACTIVE';\nexport const PERM_LAST_DISPLAYED_MEMORY_VAR = 'permNotificationLastDisplayed';\nexport const PING_TRACKER = 'pingtracker';\n\n\n\n/*      RESOURCE PATHES     */\nexport const RESOURCE_CONTENT_STYLE = \"app/content-style.css\";\n\n\n/*      CSS CLASSES     */\nexport const CSS_DISPLAY_NONE = 'A2O4W8X6IK';\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_EL_GENERIC = 'B2O4W8X6IL'; // easylist visual debugging generic items\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_EL_SPECIFIC = 'C2O4W8X6IM'; // easylist visual debugging site specific items\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_HE = 'D2O4W8X6IN'; // heuristics visual debugging\nexport const CSS_GLOBAL_NOTIFICATION = 'mb-global-notification';\nexport const CSS_NOTIFICATION_INFO = 'mb-global-info';\nexport const CSS_NOTIFICATION_WARNING = 'mb-global-warning';\n\nexport const THREAT_TYPES = Object.freeze({\n    MALWARE: Object.freeze({\n        type: 'malware',\n        FULL_URL_MALWARE: 'full-url-malware',\n        SUSPICIOUS_PAGE: 'suspiciousPage',\n        SUSPICIOUS_TLD: 'suspiciousTLD',\n        RISKY_PATTERN: 'riskyPattern',\n        SUSPICIOUS_CONTENT: 'suspiciousContent',\n        MALWARE_PATTERN: 'malware-pattern',\n        ALERT_LOOP: 'alertLoop',\n        AUTH_REQUIRED_LOOP: 'authRequiredLoop',\n        CREATE_URL_LOOP: 'createURLLoop',\n        EXTENSION_INSTALL: 'extensionInstall',\n        FULL_SCREEN_LOOP: 'fullScreenLoop',\n        HISTORY_LOOP: 'historyLoop',\n        NOTIFICATION_LOOP: 'notificationLoop',\n        PRINT_LOOP: 'printLoop',\n        ADWARE: 'adware',\n        REPUTATION: 'reputation',\n        TROJAN: 'trojan',\n        MALVERTISING: 'malvertising',\n        WORM: 'worm',\n        RANSOMWARE: 'ransomware',\n        ROOTKIT: 'rootkit',\n        BACKDOOR: 'backdoor',\n        SPYWARE: 'spyware',\n        ALLOWED_EXCLUSION_VALUE: 4,\n    }),\n    SCAM: Object.freeze({\n        type: 'scam',\n        TSS: 'tss',\n        SCAM_HEURISTIC: 'scam_heuristic',\n        ALLOWED_EXCLUSION_VALUE: 6,\n\n    }),\n    PHISHING: Object.freeze({\n        type: 'phishing',\n        PHISHING_SUSPICIOUS_POST: 'phishing_suspicious_post',\n        PHISHING_BANKING: 'phishing_banking',\n        PHISHING_LOGIN: 'phishing_login',\n        PHISHING_LOGIN_VIA_TUNNEL: 'phishing_login_via_tunnel',\n        TELEMETRY_PHISHING_TUNNEL: 'telemetryPhishingTunnel',\n    }),\n    AD: Object.freeze({\n        type: 'ad',\n        ADSERVER: 'adserver',\n        ALLOWED_EXCLUSION_VALUE: 2,\n    }),\n    ADS: Object.freeze({\n        type: 'ads',\n        ADSERVER: 'adserver',\n        ALLOWED_EXCLUSION_VALUE: 2,\n    }),\n});\n\nexport const BROWSERS = Object.freeze({\n    CHROME: 'Chrome',\n    FIREFOX: 'Firefox',\n    OPERA: 'Opera',\n    EDGE: 'Edge',\n    SAFARI: 'Safari',\n});\n\nexport const DEFAULT_PERMISSIONS = Object.freeze({\n    origins: [\"<all_urls>\"],\n    permissions: [], // All permissions - to be filled.\n    optional_permissions: [] // All optional permissions - to be filled.\n});\n\n/*      ALLOWED EXPORTED SETTINGS     */\nexport const ALLOWED_EXPORTED_SETTINGS = {\n    version: \"3.0.0\",\n    allowList: {},\n    blockedItems: [],\n    contentControls: [],\n    settings: {\n        enableBlockCountDisplay: true,\n        enableMaliciousNotification: true,\n        enableMonthlyNotification: true,\n        enableNewReleaseNotification: true,\n        enableProtection: true,\n        enableProtectionAds: true,\n        enableProtectionMalware: true,\n        enableProtectionScams: true,\n        enableSkimmerProtection: true,\n        showReleaseNotificationFlag: true,\n        enableProtectionGtld: false,\n        enableVerboseLogging: false,\n    }\n}\n\n/*\n    Standard CSS selectors, the separator is ##.\n    Extended CSS pseudo-selectors, the separator is #?#.\n */\n\nexport const ruleSeparatorRegex = /^(.*?)(##|#\\?#)(.+)$/\nexport const ruleSeparatorRegexInstance = new RegExp(ruleSeparatorRegex)\n\nexport const BROWSER_PERMISSIONS = Object.freeze({\n    Chrome: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"storage\",\n            \"tabs\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"webRequest\",\n            \"contextMenus\",\n            \"nativeMessaging\",\n            \"offscreen\",\n            \"activeTab\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Firefox: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"storage\",\n            \"tabs\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"webRequest\",\n            \"webRequestBlocking\",\n            \"contextMenus\",\n            \"nativeMessaging\",\n            \"activeTab\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Edge: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"nativeMessaging\",\n            \"storage\",\n            \"tabs\",\n            \"webRequest\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"contextMenus\",\n            \"offscreen\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Safari: Object.freeze({\n        origins: [],\n        permissions: []\n    })\n});\n\n\n// the pruposse of this object is to have a human readable title and description for each permission\nexport const PERMISSIONS_CONTROL_CAROUSEL = Object.freeze({\n    clipboardRead: {\n        title: \"clipboardReadPermTitle\",\n        description: \"clipboardReadPermDesc\"\n    },\n    clipboardWrite: {\n        title: \"clipboardWritePermTitle\",\n        description: \"clipboardWritePermDesc\"\n    },\n    alarms: {\n        title: \"alarms\",\n        description: \"alarms\"\n    },\n    downloads: {\n        title: \"downloads\",\n        description: \"downloads\"\n    },\n    storage: {\n        title: \"storage\",\n        description: \"storage\"\n    },\n    tabs: {\n        title: \"tabs\",\n        description: \"tabs\"\n    },\n    declarativeNetRequest: {\n        title: \"declarativeNetRequest\",\n        description: \"declarativeNetRequest\"\n    },\n    declarativeNetRequestFeedback: {\n        title: \"declarativeNetRequestFeedback\",\n        description: \"declarativeNetRequestFeedback\"\n    },\n    unlimitedStorage: {\n        title: \"unlimitedStorage\",\n        description: \"unlimitedStorage\"\n    },\n    webRequest: {\n        title: \"webRequest\",\n        description: \"webRequest\"\n    },\n    contextMenus: {\n        title: \"contextMenus\",\n        description: \"contextMenus\"\n    },\n    nativeMessaging: {\n        title: \"nativeMessaging\",\n        description: \"nativeMessaging\"\n    },\n    offscreen: {\n        title: \"offscreen\",\n        description: \"offscreen\"\n    },\n    activeTab: {\n        title: \"activeTab\",\n        description: \"activeTab\"\n    },\n});\n\n// List of domains that are always allowed, even if Research deliberate tries to block them.\nexport const ALWAYS_ALLOW = {\n    'amazon.com': true, 'www.amazon.com': true,\n    'baidu.com': true, 'www.baidu.com': true,\n    'bilibili.com': true, 'www.bilibili.com': true,\n    'bing.com': true, 'www.bing.com': true,\n    'cnn.com': true, 'www.cnn.com': true,\n    'discord.com': true, 'www.discord.com': true,\n    'discordapp.com': true, 'www.discordapp.com': true,\n    'ebay.com': true, 'www.ebay.com': true,\n    'facebook.com': true, 'www.facebook.com': true,\n    'foxnews.com': true, 'www.foxnews.com': true,\n    'google.com': true, 'www.google.com': true,\n    'instagram.com': true, 'www.instagram.com': true,\n    'linkedin.com': true, 'www.linkedin.com': true,\n    'live.com': true, 'www.live.com': true,\n    'mail.ru': true, 'www.mail.ru': true,\n    'malwarebytes.com': true, 'www.malwarebytes.com': true,\n    'mbamupdates.com': true, 'www.mbamupdates.com': true,\n    'microsoft.com': true, 'www.microsoft.com': true,\n    'microsoftonline.com': true, 'www.microsoftonline.com': true,\n    'mozilla.com': true, 'www.mozilla.com': true,\n    'msn.com': true, 'www.msn.com': true,\n    'mwbsys.com': true, 'www.mwbsys.com': true, // Malwarebytes CDN\n    'naver.com': true, 'www.naver.com': true,\n    'netflix.com': true, 'www.netflix.com': true,\n    'nsslabs.com': true, 'www.nsslabs.com': true,\n    'office.com': true, 'www.office.com': true,\n    'pinterest.com': true, 'www.pinterest.com': true,\n    'qq.com': true, 'www.qq.com': true,\n    'reddit.com': true, 'www.reddit.com': true,\n    'tiktok.com': true, 'www.tiktok.com': true,\n    'twitch.tv': true, 'www.twitch.tv': true,\n    'twitter.com': true, 'www.twitter.com': true,\n    'virustotal.com': true, 'www.virustotal.com': true,\n    'vk.com': true, 'www.vk.com': true,\n    'weather.com': true, 'www.weather.com': true,\n    'whatsapp.com': true, 'www.whatsapp.com': true,\n    'wikipedia.org': true, 'www.wikipedia.org': true,\n    'windows.net': true, 'www.windows.net': true,\n    'windowsupdate.com': true, 'www.windowsupdate.com': true,\n    'yahoo.co.jp': true, 'www.yahoo.co.jp': true,\n    'yahoo.com': true, 'www.yahoo.com': true,\n    'yandex.ru': true, 'www.yandex.ru': true,\n    'youtube.com': true, 'www.youtube.com': true,\n    'zoom.us': true, 'www.zoom.us': true,\n};\n\nexport const ALL_TIME_STATS_TEMPLATE = {\n    ads: 0,\n    silentAds: 0,\n    malwares: 0,\n    silentMalwares: 0,\n    scams: 0,\n    silentScams: 0,\n    content: 0,\n    silentContent: 0,\n}\n","import { SetTss } from \"./tss-setup\";\nimport {\n    EXCLUSION_SCAMS,\n    MSG_CHECK_DOMAIN_ALLOW_LIST,\n    MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE\n} from \"@/app/scripts/app-consts.js\"\n\nfunction checkDomainAndRun() {\n    return new Promise((resolve) => {\n        function onMessage(event) {\n            if (event.source !== window) { return; }\n            if (event.data && event.data.type === MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE) {\n                window.removeEventListener(\"message\", onMessage);\n                resolve(event.data.isAllowListed);\n            }\n        }\n\n        window.addEventListener(\"message\", onMessage);\n\n        // Send message to content script to check domain\n        if (window.location.hostname != \"\") {\n            window.postMessage(\n                {\n                    type: MSG_CHECK_DOMAIN_ALLOW_LIST,\n                    domainUrl: window.location.hostname,\n                    exclusionType: EXCLUSION_SCAMS,\n                },\n                \"*\"\n            );\n    \n        }    \n    });\n}\n\ncheckDomainAndRun().then((isAllowListedForScams) => {\n    if (isAllowListedForScams) {\n        console.log(\"TSS: Domain is in allow list, skipping TSS setup.\");\n    } else {\n        // Now safe to run your main logic\n        const IsRepeatedFunc = (data, interval, threshold) => {\n            console.debug(\n                `TSS: Checking if repeated ${threshold} times for interval ${interval} against data: `,\n                data\n            );\n            // return true if >= N occurrences in interval (milliseconds)\n            const thisTime = Date.now();\n            if (data.lastTime) {\n                let thisInterval = thisTime - data.lastTime;\n                if (thisInterval < interval) {\n                    data.lastCount++;\n                    if (data.lastCount >= threshold) {\n                        return true;\n                    }\n                } else {\n                    data.lastTime = thisTime;\n                    data.lastCount = 1;\n                }\n            } else if (threshold === 1) {\n                data.lastTime = thisTime;\n                data.lastCount = 1;\n                return true;\n            } else {\n                data.lastTime = thisTime;\n                data.lastCount = 1;\n            }\n            return false;\n        };\n\n        const CTX = \"injection-tss\";\n        SetTss(\"nonce\", IsRepeatedFunc, CTX);\n    }\n});\n"],"names":["SetTss","nonce","isRepeatedFunc","funcCtx","console","debug","detected","excluded","lastHistoryData","lastPrintData","lastCreateURLData","lastNotificationData","setHook","object","f","subtype","detectFunc","proxy","passthru","isBrowserlocker","originalFunc","Error","parameters","slice","call","arguments","window","top","postMessage","JSON","parse","stringify","type","notify","this","apply","isRepeated","data","interval","threshold","onHistoryReplace","onHistory","_parameters","history","setTimeout","URL","chrome","webstore","Notification","addEventListener","event","source","Object","freeze","LicenseStateUnknown","LicenseStateFree","LicenseStateTrial","LicenseStateTrialExpired","LicenseStateLicensed","LicenseStateLicenseExpired","LicenseStateLicenseGrace","MALWARE","FULL_URL_MALWARE","SUSPICIOUS_PAGE","SUSPICIOUS_TLD","RISKY_PATTERN","SUSPICIOUS_CONTENT","MALWARE_PATTERN","ALERT_LOOP","AUTH_REQUIRED_LOOP","CREATE_URL_LOOP","EXTENSION_INSTALL","FULL_SCREEN_LOOP","HISTORY_LOOP","NOTIFICATION_LOOP","PRINT_LOOP","ADWARE","REPUTATION","TROJAN","MALVERTISING","WORM","RANSOMWARE","ROOTKIT","BACKDOOR","SPYWARE","ALLOWED_EXCLUSION_VALUE","SCAM","TSS","SCAM_HEURISTIC","PHISHING","PHISHING_SUSPICIOUS_POST","PHISHING_BANKING","PHISHING_LOGIN","PHISHING_LOGIN_VIA_TUNNEL","TELEMETRY_PHISHING_TUNNEL","AD","ADSERVER","ADS","CHROME","FIREFOX","OPERA","EDGE","SAFARI","origins","permissions","optional_permissions","RegExp","Chrome","Firefox","Edge","Safari","clipboardRead","title","description","clipboardWrite","alarms","downloads","storage","tabs","declarativeNetRequest","declarativeNetRequestFeedback","unlimitedStorage","webRequest","contextMenus","nativeMessaging","offscreen","activeTab","Promise","resolve","onMessage","removeEventListener","isAllowListed","location","hostname","domainUrl","exclusionType","then","isAllowListedForScams","log","IsRepeatedFunc","thisTime","Date","now","lastTime","lastCount"],"sourceRoot":""}