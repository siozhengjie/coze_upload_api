{"version":3,"file":"content-debugging.js","mappings":"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","sources":["webpack://browser-guard/./guard-app/content-scripts/heuristics-db/content-heuristics.ts","webpack://browser-guard/./guard-app/app/scripts/app-consts.js","webpack://browser-guard/./guard-app/content-scripts/heuristics-db/types.ts","webpack://browser-guard/./guard-app/content-scripts/heuristics-db/selector-parser.ts","webpack://browser-guard/webpack/bootstrap","webpack://browser-guard/webpack/runtime/define property getters","webpack://browser-guard/webpack/runtime/hasOwnProperty shorthand","webpack://browser-guard/webpack/runtime/publicPath","webpack://browser-guard/./configure-webpack.js","webpack://browser-guard/./guard-app/utils/polyfill.ts","webpack://browser-guard/./node_modules/dompurify/dist/purify.es.mjs","webpack://browser-guard/./guard-app/content-scripts/content-debugging.js"],"sourcesContent":["import {\n  Actions,\n  BlockURL,\n  ContainsSelector,\n  CommentsSelector,\n  DomainRules,\n  ElementHidingSelectors,\n  HasSelector,\n  HeuristicRule,\n  HeuristicsRulesParams,\n  NotSelector,\n  ProcessedRules,\n  PropertiesSelector,\n  RuleType,\n  Selector,\n  SelectorObj,\n  XPathSelector,\n} from \"@/content-scripts/heuristics-db/types\";\nimport { SelectorParser } from \"@/content-scripts/heuristics-db/selector-parser\";\n\nimport {\n  MSG_GET_HEURISTICS_DATABASE,\n  MSG_GET_HEURISTICS_URLS_TO_BLOCK,\n  ruleSeparatorRegexInstance,\n} from \"@/app/scripts/app-consts\";\nlet useLogging = false;\n\n//@ts-ignore\nif (ENVIRONMENT == \"development\" && typeof window !== \"undefined\") {\n  useLogging = true;\n}\n\nexport const heuristicsElementsToRemove = new Set<Element>();\nexport const heuristicsUrlsToBlock = new Set<BlockURL>();\n\nexport const downloadHeuristicsDB = (): Promise<ProcessedRules | {}> =>\n  new Promise((resolve, reject) => {\n    chrome.runtime.sendMessage(\n      {\n        type: MSG_GET_HEURISTICS_DATABASE,\n        parameters: {\n          domain: window.location.hostname,\n          url: window.location.href,\n        }\n      },\n      resolve\n    );\n  });\n\nexport const sendHeuristicsURLsToBlock = (): Promise<ProcessedRules | string> =>\n  new Promise((resolve, reject) => {\n    if (heuristicsUrlsToBlock.size > 0) {\n      chrome.runtime.sendMessage(\n        {\n          type: MSG_GET_HEURISTICS_URLS_TO_BLOCK,\n          heuristicsUrlsToBlockArray: Array.from(heuristicsUrlsToBlock),\n        },\n        resolve\n      );\n    } else {\n      resolve(\"Nothing to block\");\n    }\n  });\n\nexport const processHeuristicsRules = async (\n  processedRules: ProcessedRules | {},\n  currentUrl: string\n) => {\n  const isEmpty = (o) => !o || Object.keys(o).length === 0;\n  const currentDomain = new URL(currentUrl).hostname;\n  const parser = new SelectorParser();\n\n  Object.entries(processedRules).forEach(([type, rules]) => {\n    if (isEmpty(rules)) return;\n\n    switch (type as RuleType) {\n      case RuleType.ADSERVER:\n      case RuleType.PHISHING:\n      case RuleType.SCAM:\n        const isPageBlock = [RuleType.SCAM, RuleType.PHISHING].includes(\n          type as RuleType\n        );\n\n        Object.entries(rules as DomainRules).forEach(\n          ([selectorsType, selectorsByDomain]) => {\n            if (\n              ![\n                ElementHidingSelectors[\"#?#\"],\n                ElementHidingSelectors[\"##\"],\n              ].includes(selectorsType as ElementHidingSelectors)\n            ) {\n              useLogging &&\n                console.warn(\n                  \"processHeuristicsRules:Unexpected selectorsType:\",\n                  selectorsType\n                );\n              return null;\n            }\n\n            let selector, isSilent, isAggressiveMode, id;\n            processSelectorsByDomain(selectorsByDomain, currentUrl).forEach(\n              (selectorArrays) => {\n                selectorArrays.forEach(async (selectors) => {\n                  let allSelectorsMatched = true; // a rule can have multiple selectors we block a page only if all selectors are matched\n                  for (let i = 0; i < selectors.length; i++) {\n                    const aSelector = selectors[i];\n                    // destructure the item\n                    selector = aSelector.selector;\n                    isSilent = aSelector.isSilent;\n                    isAggressiveMode = aSelector.isAggressiveMode;\n                    id = aSelector.id;\n\n                    try {\n                      const parsedSelectors = parser.parseSelector(selector);\n                      if (!parsedSelectors) {\n                        allSelectorsMatched = false;\n                        return;\n                      };\n\n                      const elements = getElementsByRule(parsedSelectors);\n                      if (elements.length === 0) {\n                        allSelectorsMatched = false;\n                        return;\n                      }\n\n                      if (!isPageBlock) {\n                        elements.forEach((element) =>\n                          heuristicsElementsToRemove.add(element)\n                        );\n                      }\n                    } catch (error) {\n                      useLogging &&\n                        console.error(\"processSelectorsByDomain\", error);\n                      throw error;\n                    }\n                  } //\n                  if (allSelectorsMatched && isPageBlock) {\n                    heuristicsUrlsToBlock.add({\n                      domain: currentDomain,\n                      isSilent: isSilent || false,\n                      isAggressiveMode: isAggressiveMode || false,\n                      type: type as RuleType,\n                      source: selector,\n                      id: id,\n                    });\n                  }\n\n                });\n              }\n            );\n          }\n        );\n        break;\n      default:\n        return;\n    }\n  });\n};\n\ntype PatternInput = string | RegExp;\n\nexport const checkUrlAgainstCurrentDomain = (\n  pattern: PatternInput,\n  href: string | undefined\n): boolean => {\n  try {\n    if (!href) return false;\n    const urlRegex = new RegExp(pattern, \"i\");\n    return urlRegex.test(href);\n  } catch {\n    if (typeof pattern === \"string\" && href) {\n      return pattern === \"\" || pattern === \"*\" || href.includes(pattern);\n    }\n    return false;\n  }\n};\n\nexport function processSelectorsByDomain(\n  selectorsByDomain: SelectorObj[],\n  href: string\n): SelectorObj[][][] {\n  let parsedSelectorsToReturn: SelectorObj[][][] = [];\n  Object.entries(selectorsByDomain).forEach(([domainRegex, selectors]) => {\n    const applyForDomain = checkUrlAgainstCurrentDomain(domainRegex, href);\n    if (Array.isArray(selectors) && selectors.length > 0 && applyForDomain) {\n      parsedSelectorsToReturn.push(selectors);\n    }\n  });\n  return parsedSelectorsToReturn;\n}\n\n/**\n * Processes heuristic rules for ads, scams, and phishing\n * @param heuristicsContent Array of heuristic rules to process\n * @returns Processed rules organized by type and domain\n */\nexport async function processHeuristics(\n  heuristicsContent: HeuristicRule[]\n): Promise<ProcessedRules> {\n  const processedRules: ProcessedRules = {\n    adserver: {},\n    whitelist: {},\n    scam: {},\n    phishing: {},\n    action: [],\n    title: [],\n    description: [],\n    cleanName: \"heuristics\",\n    version: \"3.0.0\",\n    name: \"mbgc.db.heuristics.json.2\",\n  };\n\n  // Process each rule\n  for (const rule of heuristicsContent) {\n    if (!isValidHeuristicsRule(rule)) continue;\n    const {\n      r: ruleContent,\n      s: isSilent,\n      t: type,\n      a: isAggressiveMode,\n      id,\n    } = rule;\n    if (!ruleContent || !type) continue;\n\n    const params: HeuristicsRulesParams = {\n      isSilent,\n      isAggressiveMode: isAggressiveMode || false,\n      id,\n    };\n\n    switch (type) {\n      case RuleType.ADSERVER:\n        processRule(ruleContent, processedRules.adserver);\n        break;\n      case RuleType.SCAM:\n        processRule(ruleContent, processedRules.scam, params);\n        break;\n      case RuleType.PHISHING:\n        processRule(ruleContent, processedRules.phishing, params);\n        break;\n    }\n  }\n  return processedRules;\n}\n\ntype SimpleRule = {\n  separator: string;\n  selector: string;\n};\n\ntype RuleComponents = {\n  domain: string;\n  selectors: SimpleRule[];\n};\n\n/*\n * Splits a rule string into its components\n * @param rule - The rule string to split\n * @returns An object containing the domain, separator, and selectors\n * {\"id\": 5555, \"r\":\"#?#title:contains(Document)#@#h2:contains(bitcoin)\", \"s\":false, \"t\":\"phishing\", \"a\": true}\n */\nconst splitRule = (rule: string): RuleComponents | null => {\n  // split multiple rules by the separator #@#\n  const rules = rule.split(/#@#/);\n  // acquire rule separator from the first rule only\n  let firstRule = true;\n  let separator = \"\";\n  let ruleSelector = \"\";\n  let domain = \"\";\n  let result: RuleComponents = {\n    domain: \"\",\n    selectors: [],\n  };\n  for (const rule of rules) {\n    if (firstRule) {\n      const match = rule.match(ruleSeparatorRegexInstance);\n      if (!match) {\n        useLogging && console.debug(\"SR: Error splitRule: \", rule);\n        return null;\n      }\n      if (match) {\n        domain = match[1];\n        separator = match[2];\n        ruleSelector = match[3];\n        firstRule = false;\n        result = {\n          domain,\n          selectors: [\n            {\n              separator,\n              selector: ruleSelector,\n            },\n          ],\n        };\n      }\n    } else {\n      ruleSelector = rule;\n      result.selectors.push({\n        separator,\n        selector: ruleSelector,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Process an individual ad rule and add it to the domain rules\n */\nfunction processRule(\n  ruleContent: string,\n  rules: DomainRules,\n  restParams?: HeuristicsRulesParams\n): void {\n  const dissectedRules: RuleComponents | null = splitRule(ruleContent);\n\n  if (!dissectedRules) {\n    useLogging && console.debug(\"PR: Error splitRule: \", ruleContent);\n    return;\n  }\n\n  let { domain, selectors } = dissectedRules;\n  if (!selectors || selectors.length === 0) {\n    useLogging && console.debug(\"PR: Error rulesArray: \", ruleContent);\n    return;\n  }\n\n  domain = domain.trim();\n  if (domain == \"\") domain = \"*\";\n  let processedSelectors: SelectorObj[] = [];\n  let separatorStr = \"\";\n  for (const item of selectors) {\n    separatorStr = ElementHidingSelectors[item.separator];\n    rules[separatorStr] = rules[separatorStr] || {};\n\n    // Process domain-specific rules\n    // {\"id\": 5555, \"r\":\"#?#title:contains(Document)#@#h2:contains(bitcoin)\", \"s\":false, \"t\":\"phishing\", \"a\": true}\n    rules[separatorStr][domain] = rules[separatorStr][domain] || [];\n    let aSelector = item.selector.trim();\n    // replace all pipe signs | with [|], since RegExp(\"Home | My Site\") matches \"Home\" or \"My Site\" thus giving false positives\n    if (aSelector.includes(\"\\\\|\")) {\n      aSelector = aSelector.replace(/\\\\\\|/g, \"[|]\");\n    }\n    if (aSelector.includes('\\\\\"')) {\n      aSelector = aSelector.replace(/\\\\\\\"/g, '\"');\n    }\n    processedSelectors.push({\n      selector: aSelector,\n      isSilent: restParams?.isSilent || false,\n      isAggressiveMode: restParams?.isAggressiveMode || false,\n      id: restParams?.id || 0,\n    });\n  }\n  rules[separatorStr][domain].push(processedSelectors);\n}\n\n/**\n * Validates if a heuristic rule has the required properties\n */\nconst isValidHeuristicsRule = (rule: unknown): rule is HeuristicRule => {\n  if (!rule || typeof rule !== \"object\") {\n    return false;\n  }\n\n  const typedRule = rule as Record<string, unknown>;\n\n  return (\n    typeof typedRule.r === \"string\" &&\n    (typeof typedRule.s === \"boolean\" || typedRule.s === null) &&\n    typeof typedRule.t === \"string\" &&\n    isValidRuleType(typedRule.t)\n  );\n};\n\n// Type guard for rule type\nconst isValidRuleType = (type: unknown): type is RuleType =>\n  typeof type === \"string\" && [\"adserver\", \"scam\", \"phishing\"].includes(type);\n\n/**\n * Gets DOM elements matching a specific rule set\n * @param rules Array of selector rules to process\n * @returns Array of matching DOM elements\n */\nexport const getElementsByRule = (rules: Selector[] | null): Element[] => {\n  let elements: Element[] = [];\n  let isFirstRule = true;\n\n  if (rules == null) return elements;\n  for (const rule of rules) {\n    if (isFirstRule) {\n      elements = processInitialSimpleSelectors(rule);\n      isFirstRule = false;\n    } else {\n      try {\n        elements = filterElementsByRule(elements, rule);\n      } catch (error) {\n        useLogging && console.error(\"Error filtering elements by rule\", error);\n      }\n    }\n    // If no elements match at any point, we can stop processing\n    if (elements.length === 0) {\n      break;\n    }\n  }\n\n  return elements;\n};\n\n/**\n * Perform the specified action on elements matching the selector\n * @param selector - The CSS selector to match elements\n * @param action - The action to perform on matched elements\n */\nconst performActionOnElements = (selector: string, action: Actions) => {\n  Array.from(document.querySelectorAll(selector)).forEach((element) => {\n    switch (action) {\n      case Actions.CLICK_ON_ELEMENT:\n        if (element instanceof HTMLElement) {\n          element.click();\n        }\n        break;\n      case Actions.REMOVE_ELEMENT:\n        element.remove();\n        break;\n    }\n  });\n};\n/**\n * Process initial simple selectors and return matching elements\n * @param rule - The selector rule to process\n * @returns Array of matching DOM elements\n */\n\nconst processInitialSimpleSelectors = (rule: Selector): Element[] => {\n  switch (rule.type) {\n    case \"plain\":\n      if (typeof document !== \"undefined\") {\n        if (rule.action) {\n          performActionOnElements(rule.selector, rule.action);\n          return [];\n        }\n        if (rule.selector.startsWith(\"/\") && rule.selector.endsWith(\"/\")) {\n          const regex = new RegExp(rule.selector.slice(1, -1), \"i\");\n          return Array.from(document.querySelectorAll(\"*\")).filter((element) =>\n            regex.test(element.textContent ?? \"\")\n          );\n        }\n        let result = [];\n        try {\n          result = Array.from(document.querySelectorAll(rule.selector));\n        } catch (error) {\n          useLogging && console.error(\"Error in querySelectorAll\", error);\n        }\n        return result;\n      } else {\n        useLogging && console.log(\"DEBUG:document undefined\");\n        return [];\n      }\n    case \"contains\":\n      return [];\n    case \"xpath\":\n      return evaluateXPathSelector(rule);\n    default:\n      useLogging &&\n        console.warn(`Unexpected initial selector type: ${rule.type}`);\n      return [];\n  }\n};\n\n/**\n * Filter elements based on a selector rule\n */\nconst filterElementsByRule = (\n  elements: Element[],\n  rule: Selector\n): Element[] => {\n  switch (rule.type) {\n    case \"plain\":\n      return elements.filter((element) => element.matches(rule.selector));\n    case \"contains\":\n      return filterByContains(elements, rule);\n    case \"comments\":\n      return filterByComments(rule);\n    case \"has\":\n      return filterByHas(elements, rule);\n    case \"not\":\n      return filterByNot(elements, rule);\n    case \"properties\":\n      return filterByProperties(elements, rule);\n    case \"xpath\":\n      return filterByXPath(elements, rule);\n    default:\n      useLogging &&\n        console.warn(`Unknown selector type: ${(rule as Selector).type}`);\n      return elements;\n  }\n};\n\n/**\n * Filter elements that contain specific text patterns\n * @param elements - Array of DOM elements to filter\n * @param rule - Contains selector rule with text patterns\n * @returns Array of elements that match the text patterns\n */\nconst filterByContains = (\n  elements: Element[],\n  rule: ContainsSelector\n): Element[] => {\n  // Create a single regex pattern that matches any of the text patterns\n  const regexPattern =\n    rule.text.startsWith(\"/\") && rule.text.endsWith(\"/\")\n      ? new RegExp(rule.text.slice(1, -1), \"i\")\n      : new RegExp(`${rule.text}`, \"i\");\n  return elements.filter((element) => {\n    const elementText = element.textContent ?? \"\";\n    let normalizedSearchText = elementText.toLowerCase().trim();\n    return regexPattern.test(normalizedSearchText);\n  });\n};\n\nfunction filterNone() {\n  return NodeFilter.FILTER_ACCEPT;\n}\n\nfunction getAllComments(rootElem) {\n  let comments: Element[] = [];\n  // Fourth argument, which is actually obsolete according to the DOM4 standard, is required in IE 11\n  let iterator = document.createNodeIterator(\n    rootElem,\n    NodeFilter.SHOW_COMMENT,\n    filterNone\n  );\n  let curNode;\n  while ((curNode = iterator.nextNode())) {\n    comments.push(curNode);\n  }\n  return comments;\n}\n\nconst filterByComments = (rule: CommentsSelector): Element[] => {\n  let comments = getAllComments(document.documentElement);\n  const regexPattern =\n    rule.text.startsWith(\"/\") && rule.text.endsWith(\"/\")\n      ? new RegExp(rule.text.slice(1, -1), \"i\")\n      : new RegExp(`${rule.text}`, \"i\");\n  return comments.filter((commentElement) => {\n    const elementText: string = commentElement.textContent ?? \"\";\n    let normalizedSearchText = elementText.toLowerCase().trim();\n    return regexPattern.test(normalizedSearchText);\n  });\n};\n\n/**\n * Filter elements that have child elements matching selectors\n */\nconst filterByHas = (elements: Element[], rule: HasSelector): Element[] => {\n  return elements.filter((element) => {\n    const childElements = getElementsByRule(rule.selectors);\n    const hasMatchingChild = childElements.some((child) =>\n      element.contains(child)\n    );\n    if (!hasMatchingChild) return false;\n    return hasMatchingChild;\n  });\n};\n\n/**\n * Filter elements that don't match the given selectors\n */\nconst filterByNot = (\n  matchingElements: Element[],\n  rule: NotSelector\n): Element[] => {\n  const excludedElements = getElementsByRule(rule.selectors);\n  return matchingElements.filter(\n    (element) => !excludedElements.includes(element)\n  );\n};\n\n/**\n * Filter elements by computed style properties\n */\nconst filterByProperties = (\n  elements: Element[],\n  rule: PropertiesSelector\n): Element[] => {\n  const cleanedStyle = rule.propertyFilter.trim(); // only trim, dont remove spaces.\n  if (cleanedStyle.length === 0) return [];\n\n  const propsKeys = cleanedStyle\n    .split(\";\")\n    .map((oneStyle) => oneStyle.split(\":\")[0].trim());\n\n  const dummyElement = createDummyHTMLElement(cleanedStyle);\n  document.body.appendChild(dummyElement);\n\n  elements = elements.filter((element) => {\n    if (!(element instanceof HTMLElement)) return false;\n\n    return hasAllStyles(element, dummyElement, propsKeys);\n  });\n\n  document.body.removeChild(dummyElement);\n\n  return elements;\n};\n\n// Function to create a dummy element with the given styles\nfunction createDummyHTMLElement(styleString: string): HTMLElement {\n  const dummyElement = document.createElement(\"section\");\n  const forceHide = \"display: none !important;\";\n\n  // make sure the dummy element is not visible\n  dummyElement.style.cssText = styleString + forceHide;\n\n  return dummyElement;\n}\n\n// Function to compare computed styles of two elements\nfunction hasAllStyles(\n  realElement: HTMLElement,\n  dummyElement: HTMLElement,\n  properties: string[]\n): Boolean {\n  // Get computed styles for both elements\n  const realComputedStyle = window.getComputedStyle(realElement);\n  const dummyComputedStyle = window.getComputedStyle(dummyElement);\n\n  // Iterate through all styles in the dummy element\n  for (const property of properties) {\n    const dummyValue = dummyComputedStyle.getPropertyValue(property).trim();\n    const realValue = realComputedStyle.getPropertyValue(property).trim();\n\n    // If the property in dummy doesn't match real, return false\n    if (dummyValue && dummyValue !== realValue) {\n      // Mismatch found for property\n      return false;\n    }\n  }\n\n  // If all styles match, return true\n  return true;\n}\n\n/**\n * Evaluate XPath selector and return matching elements\n */\nconst evaluateXPathSelector = (rule: XPathSelector): Element[] => {\n  try {\n    const result = document.evaluate(\n      rule.xpath,\n      document,\n      null,\n      XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n      null\n    );\n\n    const elements: Element[] = [];\n    for (let i = 0; i < result.snapshotLength; i++) {\n      const element = result.snapshotItem(i) as Element;\n      if (element) elements.push(element);\n    }\n    return elements;\n  } catch (error) {\n    useLogging && console.error(\"XPath evaluation error:\", error);\n    return [];\n  }\n};\n\n/**\n * Filter elements by XPath expression\n */\nconst filterByXPath = (elements: Element[], rule: XPathSelector): Element[] => {\n  const xpathElements = evaluateXPathSelector(rule);\n  return elements.filter((element) => xpathElements.includes(element));\n};\n","export const RELOAD_ON_CLOSE_PORT = 'RELOAD_ON_CLOSE_PORT';\nexport const MSG_ICON_REFRESH = 'MSG_ICON_REFRESH';\nexport const MSG_ICONS_REFRESH = 'MSG_ICONS_REFRESH';\n\nexport const EXCLUSION_MALWARE = 'EXCLUSION_MALWARE';\nexport const EXCLUSION_SCAMS = 'EXCLUSION_SCAMS';\nexport const EXCLUSION_ADS = 'EXCLUSION_ADS';\nexport const EXCLUSION_PUPS = 'EXCLUSION_PUPS';\nexport const EXCLUSION_TYPE_DOMAIN = 'domain';\nexport const GDPR_REMOVAL_FLAG = 'GDPR_REMOVAL_FLAG';\nexport const EXCLUSION_TYPE_DOMAIN_TEMPORARY = 'domain (temporary)';\nexport const BAD_PACKAGE_ERROR = \"BAD_PACKAGE_ERROR\"\nexport const MISSING_DATABASE_ERROR = \"MISSING_DATABASE_ERROR\"\nexport const LICENSE_FREE = 'LICENSE_FREE';\nexport const LICENSE_TRIAL = 'LICENSE_TRIAL';\nexport const LICENSE_PREMIUM = 'LICENSE_PREMIUM';\nexport const LICENSE_STATE_ENUM = Object.freeze({\n    LicenseStateUnknown: 0,\n    LicenseStateFree: 1,\n    LicenseStateTrial: 2,\n    LicenseStateTrialExpired: 3,\n    LicenseStateLicensed: 4,\n    LicenseStateLicenseExpired: 5,\n    LicenseStateLicenseGrace: 6\n});\nexport const PREMIUM_LICENSE_STATES = Object.freeze([2, 4, 6]);\nexport const SETTING_TELEMETRY_CONSENT = 'sendTelemetry';\nexport const SETTING_ADS = 'enableProtectionAds';\nexport const SETTING_GTLD = 'enableProtectionGtld';\nexport const SETTING_NATIVE_MESSAGING = 'enableNativeMessaging';\nexport const SETTING_MALWARE = 'enableProtectionMalware';\nexport const SETTING_SCAMS = 'enableProtectionScams';\nexport const SETTING_BLOCK_COUNT = 'enableBlockCountDisplay';\nexport const SETTING_KILLSWITCH = 'enableProtection';\nexport const SETTING_SKIMMER_PROTECTION = 'enableSkimmerProtection';\nexport const SETTING_VERBOSE_LOGGING = 'enableVerboseLogging';\nexport const SETTING_MONTHLY_NOTIFICATION = 'enableMonthlyNotification';\nexport const SETTING_MALICIOUS_NOTIFICATION = 'enableMaliciousNotification';\nexport const SETTING_BREACH_NOTIFICATION = 'enableBreachNotification';\nexport const SETTING_NEW_RELEASE_NOTIFICATION = 'enableNewReleaseNotification';\nexport const SETTING_SEARCH_HIJACKING_NOTIFICATION = 'enableSearchHijackingNotification';\nexport const SETTING_VISUAL_DEBUGGING = 'enableVisualDebugging';\nexport const SETTING_PING_TRACKER_REMOVER = 'enablePingTrackerRemover';\n\nexport const SETTING_FLAGS = {\n    [SETTING_KILLSWITCH]: 0x00000002, // Overall Protection status\n    [SETTING_ADS]: 0x00000004, // Ads/Trackers\n    [SETTING_MALWARE]: 0x00000008, // Malware\n    [SETTING_SCAMS]: 0x00000010, // Scams\n};\nexport const ALLOWED_EXCLUSION_OPTIONS = [\n    {\n        value: 2,\n        constantKey: EXCLUSION_ADS,\n        humanReadable: \"Ads / Trackers\"\n    },\n    {\n        value: 4,\n        constantKey: EXCLUSION_MALWARE,\n        humanReadable: \"Malware\"\n    },\n    {\n        value: 6,\n        constantKey: EXCLUSION_SCAMS,\n        humanReadable: \"Scams\"\n    },\n    {\n        value: 7,\n        constantKey: EXCLUSION_PUPS,\n        //Do not display PUPs label anymore\n        humanReadable: \"\"\n    }\n];\n\nexport const RELEASE_NOTIFICATION_DEAFULT_TEXT = 'Browser Guard has been updated!';\n\n//Change manually these release notes (current notes of v2.6.26)\nexport const RELEASE_NOTIFICATION_NOTES = [\n    'New release notifications',\n    'Auto deny GDPR consent trackers',\n    'Misc bug fixes'\n]\n\n//Change manually these release notes \nexport const RELEASE_NOTIFICATION_NOTES_MV3 = [\n    'Improve Heuristic protection',\n    'Improve Search Hijacking protection',\n    'Misc bug fixes' // this should always exist and be the last one.\n];\n\n\n// Feature flags that are enabled/disabled by the FEATURE_FLAGS DB\nexport const FLAG_ENABLE_BLOCK_EASYLIST_ADS = 'enableBlockEasylistAds';\nexport const FLAG_ENABLE_BLOCK_GDPR = 'enableBlockGdpr';\nexport const FLAG_ENABLE_BLOCK_LOCAL_PORT_SCANNING = 'enableBlockLocalPortScanning';\nexport const FLAG_ENABLE_BLOCK_YOUTUBE_CUSTOM_ADS = 'enableBlockYoutubeCustomAds';\nexport const FLAG_ENABLE_BREACH_NOTIFICATION = 'enableBreachNotification';\nexport const FLAG_ENABLE_SEARCH_HIJACKING_NOTIFICATION = 'enableSearchHijackingNotification';\nexport const FLAG_ENABLE_HEURISTIC_BLOCKING = 'enableHeuristicBlocking';\nexport const FLAG_ENABLE_SUSPICIOUS_POST_OR_PUT_DETECTION = 'enableSuspiciousPostOrPutDetection';\nexport const FLAG_ENABLE_SUSPICIOUS_TITLE_DETECTION = 'enableSuspiciousTitleDetection';\nexport const FLAG_ENABLE_PING_TRACKER_REMOVER = 'enablePingTrackerRemover';\n\nexport const FLAG_ENABLE_PREMIUM = 'FLAG_ENABLE_PREMIUM';\nexport const UPDATE_DB_MAX_ATTEMPS = 4;\n\nexport const MSG_FIREFOX = 'MSG_FIREFOX';\nexport const MSG_UUID_GET = 'MSG_UUID_GET';\nexport const MSG_INT_VER = 'MSG_INT_VER';\nexport const MSG_USER_GROUP_GET = 'MSG_USER_GROUP_GET';\nexport const MSG_IS_ONBOARDING_COMPLETE = 'MSG_IS_ONBOARDING_COMPLETE';\nexport const MSG_WEBSITE_CHECKBOX_GET = 'MSG_WEBSITE_CHECKBOX_GET';\nexport const MSG_SETTINGS_GET = 'MSG_SETTINGS_GET';\nexport const MSG_SETTINGS_SET = 'MSG_SETTINGS_SET';\nexport const MSG_IS_PREMIUM = 'MSG_IS_PREMIUM';\nexport const MSG_IS_TRIAL = 'MSG_IS_TRIAL';\nexport const MSG_TAB_DATA_GET = 'MSG_TAB_DATA_GET';\nexport const MSG_RECORDS_GET = 'MSG_RECORDS_GET';\nexport const MSG_GET_ALL_STATS = 'MSG_GET_ALL_STATS';\nexport const MSG_DEBUG_ADD_STATS = 'MSG_DEBUG_ADD_STATS';\nexport const MSG_DEBUG_CLEAR_STATS = 'MSG_DEBUG_CLEAR_STATS';\nexport const MSG_ADD_ALLOW = 'MSG_ADD_ALLOW';\nexport const MSG_SET_ALLOW_GRANULAR = 'MSG_SET_ALLOW_GRANULAR';\nexport const MSG_GET_ALLOW_GRANULAR = 'MSG_GET_ALLOW_GRANULAR';\nexport const MSG_ADD_ALLOW_TEMPORARY = 'MSG_ADD_ALLOW_TEMPORARY';\nexport const MSG_ALLOW_TEMPORARILY = 'MSG_ALLOW_TEMPORARILY';\nexport const MSG_ADD_ALLOW_META_ONLY = 'MSG_ADD_ALLOW_META_ONLY';\nexport const MSG_REM_ALLOW_ALL = 'MSG_REM_ALLOW_ALL';\nexport const MSG_REM_ALLOW_DOMAIN = 'MSG_REM_ALLOW_DOMAIN';\nexport const MSG_REM_ALLOW_SINGLE = 'MSG_REM_ALLOW_SINGLE';\nexport const MSG_ALLOW_GET_ALL = 'MSG_ALLOW_GET_ALL';\nexport const MSG_ALLOW_GET_SINGLE = 'MSG_ALLOW_GET_SINGLE';\nexport const MSG_IS_LAYER_ACTIVE = 'MSG_IS_LAYER_ACTIVE';\nexport const MSG_DOWNLOAD_LOGS = 'MSG_DOWNLOAD_LOGS';\nexport const MSG_FORCE_DATABASE_UPDATE = 'MSG_FORCE_DATABASE_UPDATE';\nexport const MSG_TAB_ID_GET = 'MSG_TAB_ID_GET';\nexport const MSG_TAB_INFO_GET = 'MSG_TAB_INFO_GET';\nexport const MSG_GET_HEURISTICS_DATABASE = \"MSG_GET_HEURISTICS_DATABASE\";\nexport const MSG_IS_NEEDING_NATIVE_MSG = 'MSG_IS_NEEDING_NATIVE_MSG';\nexport const MSG_TOGGLE_NATIVE_MSG = 'MSG_TOGGLE_NATIVE_MSG';\nexport const MSG_BADGE_COUNT_UPDATE = 'MSG_BADGE_COUNT_UPDATE';\nexport const MSG_RECORD_ARW = 'MSG_RECORD_ARW';\nexport const MSG_IS_AD_PROTECTION_ACTIVE = 'MSG_IS_AD_PROTECTION_ACTIVE';\nexport const MSG_GET_BLOCKED_ITEMS = 'MSG_GET_BLOCKED_ITEMS';\nexport const MSG_DELETE_BLOCKED_ITEM = 'MSG_DELETE_BLOCKED_ITEM';\nexport const MSG_DELETE_ALL_BLOCKED_ITEMS = 'MSG_DELETE_ALL_BLOCKED_ITEMS';\nexport const MSG_TELEMETRY_EMAIL_SHOWN = 'MSG_TELEMETRY_EMAIL_SHOWN';\nexport const MSG_TELEMETRY_EMAIL_SENT = 'MSG_TELEMETRY_EMAIL_SENT';\nexport const MSG_TELEMETRY_EMAIL_FAILED = 'MSG_TELEMETRY_EMAIL_FAILED';\nexport const MSG_MV3_LAST_TAB_URL = 'MSG_MV3_LAST_TAB_URL';\nexport const PORT_FORCE_DATABASE_UPDATE = 'PORT_FORCE_DATABASE_UPDATE';\nexport const GROUP_A = 'GROUP_A';\nexport const MSG_RESET = 'MSG_RESET';\nexport const MSG_RECORD_CONTENT_AD = 'MSG_RECORD_CONTENT_AD';\nexport const MSG_RECORD_EASYLIST_AD = 'MSG_RECORD_EASYLIST_AD';\nexport const MSG_RECORD_EASYLIST_PRIVACY = 'MSG_RECORD_EASYLIST_PRIVACY';\nexport const MSG_MV3_TOGGLE_PROTECTION = 'MSG_MV3_TOGGLE_PROTECTION';\nexport const MSG_MV3_TOGGLE_INDIVIDUAL_PROTECTION = 'MSG_MV3_TOGGLE_INDIVIDUAL_PROTECTION';\nexport const MSG_MV3_TOGGLE_GTLD_PROTECTION = 'MSG_MV3_TOGGLE_GTLD_PROTECTION';\nexport const MV3_PROTECTION_ADS = 'MV3_ADS';\nexport const MV3_PROTECTION_MALWARE = 'MV3_MALWARE';\nexport const MV3_PROTECTION_SCAMS = 'MV3_SCAMS';\nexport const SETTING_MV3_ENABLED_FEATURES = 'MV3_ENABLED_FEATURES';\nexport const MV3_FEATURE_ALL = 'MV3_FEATURE_ALL';\nexport const MV3_FEATURE_ADS_TRACKERS = 'ADS_TRACKERS';\nexport const MV3_FEATURE_EASYLIST = 'EASYLIST';\nexport const MV3_FEATURE_EASYLIST_PRIVACY = 'EASYLIST_PRIVACY';\nexport const MV3_FEATURE_MALWARE = 'MALWARE';\nexport const MV3_FEATURE_MONTHLY_NOTIFICATIONS = 'MONTHLY_NOTIFICATIONS ';\nexport const MV3_FEATURE_MALICIOUS_NOTIFICATIONS = 'MALICIOUS_NOTIFICATIONS';\nexport const MV3_FEATURE_NEW_RELEASE_NOTIFICATIONS = 'NEW_RELEASE_NOTIFICATIONS';\nexport const MV3_FEATURE_BREACH_NOTIFICATIONS = 'BREACH_NOTIFICATIONS';\nexport const MV3_FEATURE_SEARCH_HIJACKING_NOTIFICATIONS = 'SEARCH_HIJACKING_NOTIFICATIONS';\nexport const MSG_BREACH_NOTIFICATION = 'MSG_BREACH_NOTIFICATION';\nexport const MSG_MV3_INIT_WITH_IDS = 'MSG_MV3_INIT_WITH_IDS';\nexport const MSG_MV3_POST_NATIVE_EXCLUSION = 'MSG_MV3_POST_NATIVE_EXCLUSION';\nexport const MSG_INFO_BLOCKED_CONTENT = 'MSG_INFO_BLOCKED_CONTENT';\nexport const MSG_INFO_BLOCKED_CONTENT_DISPLAYED = 'MSG_INFO_BLOCKED_CONTENT_DISPLAYED';\nexport const MSG_INFO_BREACH_NOTIFICATION_DISPLAYED = 'MSG_INFO_BREACH_NOTIFICATION_DISPLAYED';\nexport const MSG_INFO_MONTHLY_NOTIFICATION = 'MSG_INFO_MONTHLY_NOTIFICATION';\nexport const MSG_INFO_RELEASE_NOTIFICATION = 'MSG_INFO_RELEASE_NOTIFICATION';\nexport const MSG_TOGGLE_VERBOSE_LOGGING = 'MSG_TOGGLE_VERBOSE_LOGGING';\nexport const MSG_CONTENT_CONTROL_GET_ALL = 'MSG_CONTENT_CONTROL_GET_ALL';\nexport const MSG_CONTENT_CONTROL_REMOVE_ITEM = 'MSG_CONTENT_CONTROL_REMOVE_ITEM';\nexport const MSG_CONTENT_CONTROL_ADD_ITEM = 'MSG_CONTENT_CONTROL_ADD_ITEM';\nexport const MSG_CONTENT_CONTROL_REMOVE_ALL = 'MSG_CONTENT_CONTROL_REMOVE_ALL';\nexport const MSG_DETECTION_HISTORY_GET_ALL = 'MSG_DETECTION_HISTORY_GET_ALL';\nexport const MSG_DETECTION_HISTORY_ADD_ITEM = 'MSG_DETECTION_HISTORY_ADD_ITEM';\nexport const MSG_DETECTION_HISTORY_REMOVE_ALL = 'MSG_DETECTION_HISTORY_REMOVE_ALL';\nexport const MSG_DETECTION_HISTORY_REMOVE_ITEM = 'MSG_DETECTION_HISTORY_REMOVE_ITEM';\nexport const MSG_IS_NEW_FEATURE_SEEN = 'MSG_IS_NEW_FEATURE_SEEN';\nexport const MSG_MARK_NEW_FEATURE_SEEN = 'MSG_MARK_NEW_FEATURE_SEEN';\nexport const FEAT_CONTENT_CONTROLS = 'contentControls';\nexport const FEAT_EXPORT_IMPORT = 'exportImport';\nexport const MSG_EXPORT_SETTINGS = 'MSG_EXPORT_SETTINGS';\nexport const MSG_IMPORT_SETTINGS = 'MSG_IMPORT_SETTINGS';\nexport const MSG_IS_WHITELISTED_SCAM = 'MSG_IS_WHITELISTED_SCAM';\nexport const MSG_DEBUG_TEST_CHANNEL = 'MSG_DEBUG_TEST_CHANNEL';\nexport const MSG_DEBUG_CHECK_URL = 'MSG_DEBUG_CHECK_URL';\nexport const MSG_DEBUG_ADD_HEURISTIC_RULE = 'MSG_DEBUG_ADD_HEURISTIC_RULE';\nexport const MSG_DEBUG_STAGING_CHANNEL = 'MSG_DEBUG_STAGING_CHANNEL';\nexport const MSG_DEBUG_STAGING_CHANNEL_RESPONSE = 'MSG_DEBUG_STAGING_CHANNEL_RESPONSE';\nexport const MSG_DEBUG_UPDATE_ERROR = 'MSG_DEBUG_UPDATE_ERROR';\nexport const MSG_COLOR_SCHEME_CHANGED = 'MSG_COLOR_SCHEME_CHANGED';\nexport const MSG_QUERY_FEATURE_FLAG = 'MSG_QUERY_FEATURE_FLAG';\nexport const MSG_LOAD_INLINE_SCRIPT = 'MSG_LOAD_INLINE_SCRIPT';\nexport const MSG_GET_EASYLIST_SELECTORS = 'MSG_GET_EASYLIST_SELECTORS';\nexport const MSG_GET_HEURISTICS_URLS_TO_BLOCK = 'MSG_GET_HEURISTICS_URLS_TO_BLOCK';\nexport const MSG_QUERY_EASYLIST = 'MSG_QUERY_EASYLIST';\nexport const MSG_IS_EXCLUDED = \"isExcluded\";\nexport const MSG_DETECTION = \"detection\";\nexport const MSG_TELEMETRY_PHISHING_TUNNEL = \"telemetryPhishingTunnel\";\nexport const MSG_CONTEXT_MENU_TARGET_URLS = \"context-menu-target-urls\";\nexport const MSG_UPDATE_PROTECTION_ON_PERM_CHANGE = \"MSG_UPDATE_PROTECTION_ON_PERM_CHANGE\";\nexport const SHOW_PERMISSION_REQUEST_ALARM = \"showPermissionRequestAlarm\";\nexport const IS_URL_PERM_REMOVED_FLAG = \"IS_URL_PERM_REMOVED_FLAG\";\nexport const MSG_CLOSE_POPUP = \"MSG_CLOSE_POPUP\";\nexport const MSG_RECORD_PING_TRACKER_REMOVAL = \"MSG_RECORD_PING_TRACKER_REMOVAL\";\nexport const MSG_CHECK_ALLOW_LIST_BY_TYPE_AND_DOMAIN = 'MSG_CHECK_ALLOW_LIST_BY_TYPE_AND_DOMAIN';\nexport const MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE = 'MSG_CHECK_DOMAIN_ALLOW_LIST_RESPONSE';\nexport const MSG_CHECK_DOMAIN_ALLOW_LIST = 'MSG_CHECK_DOMAIN_ALLOW_LIST';\nexport const MSG_APPEND_CONSOLE_LOG = \"MSG_APPEND_CONSOLE_LOG\";\n\nexport const RecordType = {\n    AD: 'AD',\n    MALWARE: 'MALWARE',\n    SCAM: 'SCAM',\n    CONTENT: 'CONTENT',\n};\nexport const ATTRIBUTION_REPORTING = 'googleattributionreport';\nexport const HEURISTIC_AD_BLOCK = 'heuristic-ad-block';\nexport const EASYLIST_AD_BLOCK = 'easylist-ad-block';\nexport const EASYLIST_PRIVACY_BLOCK = 'easylist-privacy-block';\nexport const MSG_IS_ATTR_REPORTING_ACTIVE = 'MSG_IS_ATTR_REPORTING_ACTIVE';\nexport const MSG_IS_PING_TRACKER_REMOVER_ACTIVE = 'MSG_IS_PING_TRACKER_REMOVER_ACTIVE';\nexport const PERM_LAST_DISPLAYED_MEMORY_VAR = 'permNotificationLastDisplayed';\nexport const PING_TRACKER = 'pingtracker';\n\n\n\n/*      RESOURCE PATHES     */\nexport const RESOURCE_CONTENT_STYLE = \"app/content-style.css\";\n\n\n/*      CSS CLASSES     */\nexport const CSS_DISPLAY_NONE = 'A2O4W8X6IK';\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_EL_GENERIC = 'B2O4W8X6IL'; // easylist visual debugging generic items\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_EL_SPECIFIC = 'C2O4W8X6IM'; // easylist visual debugging site specific items\nexport const CSS_DISPLAY_VISUAL_DEBUGGING_HE = 'D2O4W8X6IN'; // heuristics visual debugging\nexport const CSS_GLOBAL_NOTIFICATION = 'mb-global-notification';\nexport const CSS_NOTIFICATION_INFO = 'mb-global-info';\nexport const CSS_NOTIFICATION_WARNING = 'mb-global-warning';\n\nexport const THREAT_TYPES = Object.freeze({\n    MALWARE: Object.freeze({\n        type: 'malware',\n        FULL_URL_MALWARE: 'full-url-malware',\n        SUSPICIOUS_PAGE: 'suspiciousPage',\n        SUSPICIOUS_TLD: 'suspiciousTLD',\n        RISKY_PATTERN: 'riskyPattern',\n        SUSPICIOUS_CONTENT: 'suspiciousContent',\n        MALWARE_PATTERN: 'malware-pattern',\n        ALERT_LOOP: 'alertLoop',\n        AUTH_REQUIRED_LOOP: 'authRequiredLoop',\n        CREATE_URL_LOOP: 'createURLLoop',\n        EXTENSION_INSTALL: 'extensionInstall',\n        FULL_SCREEN_LOOP: 'fullScreenLoop',\n        HISTORY_LOOP: 'historyLoop',\n        NOTIFICATION_LOOP: 'notificationLoop',\n        PRINT_LOOP: 'printLoop',\n        ADWARE: 'adware',\n        REPUTATION: 'reputation',\n        TROJAN: 'trojan',\n        MALVERTISING: 'malvertising',\n        WORM: 'worm',\n        RANSOMWARE: 'ransomware',\n        ROOTKIT: 'rootkit',\n        BACKDOOR: 'backdoor',\n        SPYWARE: 'spyware',\n        ALLOWED_EXCLUSION_VALUE: 4,\n    }),\n    SCAM: Object.freeze({\n        type: 'scam',\n        TSS: 'tss',\n        SCAM_HEURISTIC: 'scam_heuristic',\n        ALLOWED_EXCLUSION_VALUE: 6,\n\n    }),\n    PHISHING: Object.freeze({\n        type: 'phishing',\n        PHISHING_SUSPICIOUS_POST: 'phishing_suspicious_post',\n        PHISHING_BANKING: 'phishing_banking',\n        PHISHING_LOGIN: 'phishing_login',\n        PHISHING_LOGIN_VIA_TUNNEL: 'phishing_login_via_tunnel',\n        TELEMETRY_PHISHING_TUNNEL: 'telemetryPhishingTunnel',\n    }),\n    AD: Object.freeze({\n        type: 'ad',\n        ADSERVER: 'adserver',\n        ALLOWED_EXCLUSION_VALUE: 2,\n    }),\n    ADS: Object.freeze({\n        type: 'ads',\n        ADSERVER: 'adserver',\n        ALLOWED_EXCLUSION_VALUE: 2,\n    }),\n});\n\nexport const BROWSERS = Object.freeze({\n    CHROME: 'Chrome',\n    FIREFOX: 'Firefox',\n    OPERA: 'Opera',\n    EDGE: 'Edge',\n    SAFARI: 'Safari',\n});\n\nexport const DEFAULT_PERMISSIONS = Object.freeze({\n    origins: [\"<all_urls>\"],\n    permissions: [], // All permissions - to be filled.\n    optional_permissions: [] // All optional permissions - to be filled.\n});\n\n/*      ALLOWED EXPORTED SETTINGS     */\nexport const ALLOWED_EXPORTED_SETTINGS = {\n    version: \"3.0.0\",\n    allowList: {},\n    blockedItems: [],\n    contentControls: [],\n    settings: {\n        enableBlockCountDisplay: true,\n        enableMaliciousNotification: true,\n        enableMonthlyNotification: true,\n        enableNewReleaseNotification: true,\n        enableProtection: true,\n        enableProtectionAds: true,\n        enableProtectionMalware: true,\n        enableProtectionScams: true,\n        enableSkimmerProtection: true,\n        showReleaseNotificationFlag: true,\n        enableProtectionGtld: false,\n        enableVerboseLogging: false,\n    }\n}\n\n/*\n    Standard CSS selectors, the separator is ##.\n    Extended CSS pseudo-selectors, the separator is #?#.\n */\n\nexport const ruleSeparatorRegex = /^(.*?)(##|#\\?#)(.+)$/\nexport const ruleSeparatorRegexInstance = new RegExp(ruleSeparatorRegex)\n\nexport const BROWSER_PERMISSIONS = Object.freeze({\n    Chrome: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"storage\",\n            \"tabs\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"webRequest\",\n            \"contextMenus\",\n            \"nativeMessaging\",\n            \"offscreen\",\n            \"activeTab\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Firefox: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"storage\",\n            \"tabs\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"webRequest\",\n            \"webRequestBlocking\",\n            \"contextMenus\",\n            \"nativeMessaging\",\n            \"activeTab\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Edge: Object.freeze({\n        origins: [],\n        permissions: [ // this inlcudes all permissions, required and optional\n            \"alarms\",\n            \"downloads\",\n            \"nativeMessaging\",\n            \"storage\",\n            \"tabs\",\n            \"webRequest\",\n            \"declarativeNetRequest\",\n            \"declarativeNetRequestFeedback\",\n            \"unlimitedStorage\",\n            \"contextMenus\",\n            \"offscreen\",\n            \"clipboardRead\",\n            \"clipboardWrite\"\n        ]\n    }),\n    Safari: Object.freeze({\n        origins: [],\n        permissions: []\n    })\n});\n\n\n// the pruposse of this object is to have a human readable title and description for each permission\nexport const PERMISSIONS_CONTROL_CAROUSEL = Object.freeze({\n    clipboardRead: {\n        title: \"clipboardReadPermTitle\",\n        description: \"clipboardReadPermDesc\"\n    },\n    clipboardWrite: {\n        title: \"clipboardWritePermTitle\",\n        description: \"clipboardWritePermDesc\"\n    },\n    alarms: {\n        title: \"alarms\",\n        description: \"alarms\"\n    },\n    downloads: {\n        title: \"downloads\",\n        description: \"downloads\"\n    },\n    storage: {\n        title: \"storage\",\n        description: \"storage\"\n    },\n    tabs: {\n        title: \"tabs\",\n        description: \"tabs\"\n    },\n    declarativeNetRequest: {\n        title: \"declarativeNetRequest\",\n        description: \"declarativeNetRequest\"\n    },\n    declarativeNetRequestFeedback: {\n        title: \"declarativeNetRequestFeedback\",\n        description: \"declarativeNetRequestFeedback\"\n    },\n    unlimitedStorage: {\n        title: \"unlimitedStorage\",\n        description: \"unlimitedStorage\"\n    },\n    webRequest: {\n        title: \"webRequest\",\n        description: \"webRequest\"\n    },\n    contextMenus: {\n        title: \"contextMenus\",\n        description: \"contextMenus\"\n    },\n    nativeMessaging: {\n        title: \"nativeMessaging\",\n        description: \"nativeMessaging\"\n    },\n    offscreen: {\n        title: \"offscreen\",\n        description: \"offscreen\"\n    },\n    activeTab: {\n        title: \"activeTab\",\n        description: \"activeTab\"\n    },\n});\n\n// List of domains that are always allowed, even if Research deliberate tries to block them.\nexport const ALWAYS_ALLOW = {\n    'amazon.com': true, 'www.amazon.com': true,\n    'baidu.com': true, 'www.baidu.com': true,\n    'bilibili.com': true, 'www.bilibili.com': true,\n    'bing.com': true, 'www.bing.com': true,\n    'cnn.com': true, 'www.cnn.com': true,\n    'discord.com': true, 'www.discord.com': true,\n    'discordapp.com': true, 'www.discordapp.com': true,\n    'ebay.com': true, 'www.ebay.com': true,\n    'facebook.com': true, 'www.facebook.com': true,\n    'foxnews.com': true, 'www.foxnews.com': true,\n    'google.com': true, 'www.google.com': true,\n    'instagram.com': true, 'www.instagram.com': true,\n    'linkedin.com': true, 'www.linkedin.com': true,\n    'live.com': true, 'www.live.com': true,\n    'mail.ru': true, 'www.mail.ru': true,\n    'malwarebytes.com': true, 'www.malwarebytes.com': true,\n    'mbamupdates.com': true, 'www.mbamupdates.com': true,\n    'microsoft.com': true, 'www.microsoft.com': true,\n    'microsoftonline.com': true, 'www.microsoftonline.com': true,\n    'mozilla.com': true, 'www.mozilla.com': true,\n    'msn.com': true, 'www.msn.com': true,\n    'mwbsys.com': true, 'www.mwbsys.com': true, // Malwarebytes CDN\n    'naver.com': true, 'www.naver.com': true,\n    'netflix.com': true, 'www.netflix.com': true,\n    'nsslabs.com': true, 'www.nsslabs.com': true,\n    'office.com': true, 'www.office.com': true,\n    'pinterest.com': true, 'www.pinterest.com': true,\n    'qq.com': true, 'www.qq.com': true,\n    'reddit.com': true, 'www.reddit.com': true,\n    'tiktok.com': true, 'www.tiktok.com': true,\n    'twitch.tv': true, 'www.twitch.tv': true,\n    'twitter.com': true, 'www.twitter.com': true,\n    'virustotal.com': true, 'www.virustotal.com': true,\n    'vk.com': true, 'www.vk.com': true,\n    'weather.com': true, 'www.weather.com': true,\n    'whatsapp.com': true, 'www.whatsapp.com': true,\n    'wikipedia.org': true, 'www.wikipedia.org': true,\n    'windows.net': true, 'www.windows.net': true,\n    'windowsupdate.com': true, 'www.windowsupdate.com': true,\n    'yahoo.co.jp': true, 'www.yahoo.co.jp': true,\n    'yahoo.com': true, 'www.yahoo.com': true,\n    'yandex.ru': true, 'www.yandex.ru': true,\n    'youtube.com': true, 'www.youtube.com': true,\n    'zoom.us': true, 'www.zoom.us': true,\n};\n\nexport const ALL_TIME_STATS_TEMPLATE = {\n    ads: 0,\n    silentAds: 0,\n    malwares: 0,\n    silentMalwares: 0,\n    scams: 0,\n    silentScams: 0,\n    content: 0,\n    silentContent: 0,\n}\n","export type SelectorObj = {\n    selector: string;\n    isSilent: boolean;\n    isAggressiveMode?: boolean;\n    id: number;\n  };\n\n  export enum ElementHidingSelectors {\n      \"#?#\"='extended_selectors',\n      \"##\"='basic_selectors',\n  }\n  export enum Actions {\n    CLICK_ON_ELEMENT = \"click\",\n    REMOVE_ELEMENT = \"remove\",\n  }\n\n  export enum RuleType {\n    ADSERVER = \"adserver\",\n    SCAM = \"scam\",\n    PHISHING = \"phishing\",\n    ACTION = \"action\",\n  }\n  export type DomainRules = {\n    [key in ElementHidingSelectors]: SelectorObj[];\n  }|{};\n\n  export interface HeuristicRule {\n    r: string; // rule\n    s?: boolean; // silent flag\n    t:RuleType ; // type\n    a?: boolean;\n    d?: string; // description\n    id: number;\n  }\n\n  export type HeuristicsRulesParams = {\n    isSilent?: boolean; // silent flag\n    isAggressiveMode?: boolean;\n    id: number;\n  };\n  \n  export type BlockURL = {\n    domain: string;\n    isSilent: boolean;\n    isAggressiveMode: boolean;\n    type: RuleType;\n    source: string;\n    id: number;\n  } & HeuristicsRulesParams;\n\n  export interface ProcessedRules {\n    adserver: DomainRules;\n    whitelist: Record<string, unknown>;\n    scam: DomainRules;\n    phishing: DomainRules;\n    action: unknown[];\n    title: string[];\n    description: string[];\n    cleanName: string;\n    version: string;\n    name: string;\n  }\n\n  export type SelectorType =\n    | \"plain\"\n    | \"not\"\n    | \"has\"\n    | \"contains\"\n    | \"comments\"\n    | \"xpath\"\n    | \"properties\";\n  export type ActionSelectorType = \"click\"| \"remove\";\n\n  export interface BaseSelector {\n    type: SelectorType;\n    raw: string;\n  }\n\n  export interface BaseActionSelector {\n    type: ActionSelectorType;\n    raw: string;\n  }\n\n  export interface PlainSelector extends BaseSelector {\n    type: \"plain\";\n    action?: Actions;\n    selector: string;\n  }\n\n  export interface NotSelector extends BaseSelector {\n    type: \"not\";\n    selectors: Selector[];\n  }\n\n  export interface HasSelector extends BaseSelector {\n    type: \"has\";\n    selectors: Selector[];\n  }\n\n  export interface ContainsSelector extends BaseSelector {\n    type: \"contains\";\n    text: string;\n  }\n\n  export interface CommentsSelector extends BaseSelector {\n    type: \"comments\";\n    text: string;\n  }\n\n  export interface XPathSelector extends BaseSelector {\n    type: \"xpath\";\n    xpath: string;\n  }\n  export interface ClickAction extends BaseActionSelector {\n    type: \"click\";\n    selector: string;\n  }\n  export interface RemoveAction extends BaseActionSelector {\n    type: \"remove\";\n    selector: string;\n  }\n  export interface PropertiesSelector extends BaseSelector {\n    type: \"properties\";\n    propertyFilter: string;\n  }\n\n  export type Selector =\n    | PlainSelector\n    | NotSelector\n    | HasSelector\n    | ContainsSelector\n    | CommentsSelector\n    | XPathSelector\n    | PropertiesSelector\n    | ClickAction\n    | RemoveAction;\n\n  export const COMPLEX_OPERATORS_REGEX = /:([\\w-]+|contains|xpath|properties|has|not)\\(/i;\n  export const ACTION_OPERATORS_REGEX = /^(.*?):(click|remove)\\(/i;\n","import {\n  ACTION_OPERATORS_REGEX,\n  Selector,\n  COMPLEX_OPERATORS_REGEX, Actions,\n} from \"@/content-scripts/heuristics-db/types\";\n\nexport class SelectorParser {\n  private parseSelectorContent(\n    content: string,\n    startIndex: number\n  ): { text: string; end: number } | null {\n    let parens = 1;\n    let quote: string | null = null;\n    let i = startIndex;\n\n    for (; i < content.length; i++) {\n      const c = content[i];\n\n      if (c === \"\\\\\") {\n        // Skip escaped characters\n        i++;\n        continue;\n      }\n\n      if (c === \"(\") {\n        parens++;\n      } else if (c === \")\") {\n        parens--;\n        if (parens === 0) {\n          break;\n        }\n      }\n    }\n\n    if (parens > 0) {\n      return null;\n    }\n\n    return {\n      text: content.substring(startIndex, i),\n      end: i,\n    };\n  }\n\n  public parseSelector(selector: string): Selector[] | null {\n    if (selector.length === 0) {\n      return null;\n    }\n    // Check if the selector is an action operator\n    const matchedAction = ACTION_OPERATORS_REGEX.exec(selector);\n    if (matchedAction) {\n      return this.parseActionOperator(matchedAction);\n    }\n\n    // Check if the selector is a complex operator\n    const match = COMPLEX_OPERATORS_REGEX.exec(selector);\n    if (!match) {\n      return [\n        {\n          type: \"plain\",\n          selector: selector,\n          raw: selector,\n        },\n      ];\n    }\n\n    const selectors: Selector[] = [];\n    if (match.index > 0) {\n      selectors.push({\n        type: \"plain\",\n        selector: selector.substring(0, match.index),\n        raw: selector.substring(0, match.index),\n      });\n    }\n\n    const startIndex = match.index + match[0].length;\n    const content = this.parseSelectorContent(selector, startIndex);\n\n    if (!content) {\n      throw new SyntaxError(\n        `Failed to parse selector \"${selector}\" due to unmatched parentheses.`\n      );\n    }\n\n    switch (match[1]) {\n      case \"properties\":\n        selectors.push({\n          type: \"properties\",\n          propertyFilter: content.text,\n          raw: selector,\n        });\n        break;\n      case \"has\":\n        const hasSelectors = this.parseSelector(content.text);\n        if (hasSelectors === null) break;\n        selectors.push({\n          type: \"has\",\n          selectors: hasSelectors,\n          raw: selector,\n        });\n        break;\n\n      case \"contains\":\n        // Validate that :contains() is not used alone\n        if (selectors.length === 1 && selectors[0].type === \"contains\") {\n          throw new SyntaxError(\n            `Failed to parse selector \"${selector}\", can't have a lonely :contains().`\n          );\n        }\n\n        selectors.push({\n          type: \"contains\",\n          text: content.text,\n          raw: selector,\n        });\n        break;\n\n      case \"comments\":\n        // Validate that :comments() is not used alone\n        if (selectors.length === 1 && selectors[0].type === \"comments\") {\n          throw new SyntaxError(\n            `Failed to parse selector \"${selector}\", can't have a lonely :comments().`\n          );\n        }\n\n        selectors.push({\n          type: \"comments\",\n          text: content.text,\n          raw: selector,\n        });\n        break;\n\n      case \"xpath\":\n        selectors.push({\n          type: \"xpath\",\n          xpath: content.text,\n          raw: selector,\n        });\n        break;\n\n      case \"not\":\n        const notSelectors = this.parseSelector(content.text);\n        // If all inner selectors are plain, we can use native :not()\n        if (\n          notSelectors &&\n          Array.isArray(notSelectors) &&\n          notSelectors.every((s) => s.type === \"plain\")\n        ) {\n          selectors.push({\n            type: \"plain\",\n            selector: `:not(${content.text})`,\n            raw: selector,\n          });\n        } else if (notSelectors) {\n          selectors.push({\n            type: \"not\",\n            selectors: notSelectors,\n            raw: selector,\n          });\n        }\n        break;\n\n      default:\n        throw new SyntaxError(\n          `Failed to parse selector \"${selector}\", invalid pseudo-class :${match[1]}().`\n        );\n    }\n\n    // Parse the rest of the selector after the special pseudo-class\n    const rest = this.parseSelector(selector.substring(content.end + 1));\n    if (rest) {\n      selectors.push(...(Array.isArray(rest) ? rest : [rest]));\n    }\n    return selectors;\n  }\n\n  private parseActionOperator(matchedAction: RegExpExecArray): Selector[] {\n    const action = matchedAction![2];\n    const selector = matchedAction![1];\n    const raw = matchedAction.input;\n    return [\n      {\n        type: \"plain\",\n        action: action as Actions,\n        selector: selector,\n        raw,\n      },\n    ];\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","/* eslint-disable no-undef, camelcase */\n\n// bow: https://gist.github.com/thejohnfreeman/563337119e20d090ea2d22bee9b05a6b\nif (!chrome && !browser) {\n    window.chrome = chrome || window.chrome || window.browser;\n}\n\n__webpack_public_path__ = (chrome || window.chrome).runtime.getURL('');\n","// Define a unified type\ntype PolyBrowser = typeof chrome & typeof browser;\n\n// Set the global context to the window object if it exists, otherwise use self\nconst GLOBAL_CONTEXT = typeof window !== 'undefined' ? window : self;\n\n// Create a polyBrowser object\nconst polyBrowser: PolyBrowser = (GLOBAL_CONTEXT as any).chrome || GLOBAL_CONTEXT.browser || browser;\n\n// debug what user agent is being used and what is the browser\n\nlet idb: IDBFactory;\ntry {\n  idb = indexedDB || GLOBAL_CONTEXT.indexedDB;\n} catch (error:any) {\n  console.log(`Error initializing indexedDB: ${error.message}`);\n}\n\nconst performancePoly = performance || GLOBAL_CONTEXT.performance;\nconst URLPoly = URL || GLOBAL_CONTEXT.URL;\n\nexport {\n  polyBrowser as chrome,\n  idb as indexedDB,\n  performancePoly as performance,\n  URLPoly as URL,\n};\n","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","import {chrome} from '../utils/polyfill.ts';\nimport {\n    heuristicsElementsToRemove,\n    processHeuristics,\n    processHeuristicsRules\n} from \"@/content-scripts/heuristics-db/content-heuristics\";\nimport DOMPurify from \"dompurify\";\n\nif (window.location.href === \"https://www.malwarebytes.com/browserguard/download-debug-logs?yes=true\") {\n    window.location.href = chrome.runtime.getURL('app/eventpages/downloading.html');\n}\n\nconst runHeuristicsRulesEditorScript = () => {\n\n    const ELEMENT_IDS = {\n        RULE_INPUT: \"rule-input\",\n        ADD_RULE: \"add-rule\",\n        EXECUTE: \"execute-test\",\n        RULE_PREVIEW: \"rule-object-preview\",\n        LOAD_RULES: \"load-rules-from-storage\",\n        REMOVE_RULES: \"remove-rules-from-storage\",\n        HTML_PREVIEW_CONTENT: \"html-preview-content\",\n        URL_INPUT: \"url-input\",\n    };\n\n    const STORAGE_KEY = \"heuristics-rules\";\n    const DEFAULT_RULE_TYPE = \"adserver\";\n    const DEFAULT_RULE_DESCRIPTION = \"Heuristic\";\n    const HREF = document.location.href;\n    // State management\n    let rulesArray = [];\n\n    // Storage functions\n    const saveRules = () => {\n        try {\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(rulesArray));\n        } catch (error) {\n            console.error(\"Error saving rules:\", error);\n        }\n    };\n\n    const removeRules = () => {\n        try {\n            localStorage.removeItem(STORAGE_KEY);\n            rulesArray = [];\n            updateRulePreview();\n        } catch (error) {\n            console.error(\"Error removing rules:\", error);\n        }\n    };\n\n    const loadRules = () => {\n        try {\n            const savedRules = localStorage.getItem(STORAGE_KEY);\n            if (savedRules) {\n                rulesArray = JSON.parse(savedRules);\n                updateRulePreview();\n            }\n        } catch (error) {\n            console.error(\"Error loading rules:\", error);\n            rulesArray = [];\n        }\n    };\n\n    // Helper functions\n    const validateRule = (ruleString) => {\n        if (!ruleString || typeof ruleString !== \"string\") {\n            throw new Error(\"Invalid rule format: Rule must be a non-empty string\");\n        }\n        return ruleString.trim();\n    };\n\n    const createRuleObject = (ruleString) => {\n        return {\n            r: ruleString, // rule string\n            s: false, // status\n            t: DEFAULT_RULE_TYPE,\n            d: DEFAULT_RULE_DESCRIPTION,\n        };\n    };\n\n    const updateRulePreview = () => {\n        if (elements.rulePreview) {\n            elements.rulePreview.innerHTML = JSON.stringify(rulesArray, null, 2);\n        }\n    };\n\n    // DOM Element References\n    const elements = {\n        addRuleButton: document.getElementById(ELEMENT_IDS.ADD_RULE),\n        executeRuleButton: document.getElementById(ELEMENT_IDS.EXECUTE),\n        rulePreview: document.getElementById(ELEMENT_IDS.RULE_PREVIEW),\n        ruleInput: document.getElementById(ELEMENT_IDS.RULE_INPUT),\n        loadRules: document.getElementById(ELEMENT_IDS.LOAD_RULES),\n        removeRules: document.getElementById(ELEMENT_IDS.REMOVE_RULES),\n        htmlPreviewContent: document.getElementById(ELEMENT_IDS.HTML_PREVIEW_CONTENT),\n        urlInput: document.getElementById(ELEMENT_IDS.URL_INPUT),\n    };\n\n    // Validate DOM elements\n    let elementsAreValid = true;\n    Object.entries(elements).forEach(([key, element]) => {\n        if (!element) {\n            elementsAreValid = false;\n            console.warn(`Required element \"${key}\" not found in the DOM`);\n        }\n    });\n    if (!elementsAreValid) {\n        console.error(\"One or more required elements are missing. Exiting script.\");\n        return;\n    }\n\n    // Event Handlers\n    const submitRules = () => {\n        try {\n            const ruleString = elements.ruleInput.value;\n            const validatedRule = validateRule(ruleString);\n            const ruleObject = createRuleObject(validatedRule);\n            rulesArray.push(ruleObject);\n\n            // Save to localStorage\n            saveRules();\n\n            // Update preview\n            updateRulePreview();\n\n            // Clear input after successful addition\n            elements.ruleInput.value = \"\";\n\n            // Optional: Provide user feedback\n            console.log(\"Rule added successfully:\", ruleObject);\n        } catch (error) {\n            console.error(\"Error adding rule:\", error.message);\n            elements.rulePreview.innerHTML = `<p style=\"color:red\">Error: ${DOMPurify.sanitize(error.message)}</p>`;\n        }\n    };\n\n    const isChild = (element, container) => {\n        let parent = element.parentNode;\n        while (parent) {\n            if (parent === container) {\n                return true;\n            }\n            parent = parent.parentNode;\n        }\n        return false;\n    };\n    const executeRules = async () => {\n        try {\n            const url = elements.urlInput.value;\n            if (rulesArray.length === 0) {\n                throw new Error(\"No rules to process\");\n            }\n\n            const processedRules = await processHeuristics(rulesArray);\n            elements.rulePreview.innerHTML = JSON.stringify(processedRules, null, 2);\n            await processHeuristicsRules(processedRules, url || HREF);\n            \n            heuristicsElementsToRemove.forEach((node) => {\n                const container = elements.htmlPreviewContent;\n                if (isChild(node, container)) {\n                    node.style.borderColor = \"red\";\n                    node.style.borderWidth = \"3px\";\n                    node.style.borderStyle = \"solid\";\n                    node.style.setProperty(\n                        \"-webkit-animation\",\n                        \"borderBlinkHeuristic 1s step-end infinite\",\n                        \"important\"\n                    );\n                    node.style.setProperty(\n                        \"animation\",\n                        \"borderBlinkHeuristic 1s step-end infinite\",\n                        \"important\"\n                    );\n                }\n            });\n        } catch (error) {\n            console.error(\"Error processing rules:\", error.message);\n            elements.rulePreview.innerHTML = `Error: ${DOMPurify.sanitize(error.message)}`;\n        }\n    };\n\n    // Event Listeners\n    elements.addRuleButton.addEventListener(\"click\", submitRules);\n    elements.loadRules.addEventListener(\"click\", loadRules);\n    elements.removeRules.addEventListener(\"click\", removeRules);\n    elements.executeRuleButton.addEventListener(\"click\", executeRules);\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    setTimeout(() => {\n        runHeuristicsRulesEditorScript();\n    }, 1500);\n});\n"],"names":["useLogging","heuristicsElementsToRemove","Set","heuristicsUrlsToBlock","processHeuristicsRules","async","processedRules","currentUrl","currentDomain","URL","hostname","parser","Object","entries","forEach","type","rules","o","keys","length","ADSERVER","PHISHING","SCAM","isPageBlock","includes","selectorsType","selectorsByDomain","console","warn","selector","isSilent","isAggressiveMode","id","href","parsedSelectorsToReturn","domainRegex","selectors","applyForDomain","checkUrlAgainstCurrentDomain","Array","isArray","push","processSelectorsByDomain","selectorArrays","allSelectorsMatched","i","aSelector","parsedSelectors","parseSelector","elements","getElementsByRule","element","add","error","domain","source","pattern","RegExp","test","processHeuristics","heuristicsContent","adserver","whitelist","scam","phishing","action","title","description","cleanName","version","name","rule","isValidHeuristicsRule","r","ruleContent","s","t","a","params","processRule","splitRule","split","firstRule","separator","ruleSelector","result","match","debug","restParams","dissectedRules","trim","processedSelectors","separatorStr","item","replace","typedRule","isValidRuleType","isFirstRule","processInitialSimpleSelectors","filterElementsByRule","document","from","querySelectorAll","CLICK_ON_ELEMENT","HTMLElement","click","REMOVE_ELEMENT","remove","startsWith","endsWith","regex","slice","filter","textContent","log","evaluateXPathSelector","matches","filterByContains","filterByComments","filterByHas","filterByNot","filterByProperties","filterByXPath","regexPattern","text","normalizedSearchText","toLowerCase","filterNone","NodeFilter","FILTER_ACCEPT","comments","rootElem","curNode","iterator","createNodeIterator","SHOW_COMMENT","nextNode","getAllComments","documentElement","commentElement","some","child","contains","matchingElements","excludedElements","cleanedStyle","propertyFilter","propsKeys","map","oneStyle","dummyElement","styleString","createElement","style","cssText","createDummyHTMLElement","body","appendChild","realElement","properties","realComputedStyle","window","getComputedStyle","dummyComputedStyle","property","dummyValue","getPropertyValue","realValue","hasAllStyles","removeChild","evaluate","xpath","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","snapshotLength","snapshotItem","xpathElements","freeze","LicenseStateUnknown","LicenseStateFree","LicenseStateTrial","LicenseStateTrialExpired","LicenseStateLicensed","LicenseStateLicenseExpired","LicenseStateLicenseGrace","MALWARE","FULL_URL_MALWARE","SUSPICIOUS_PAGE","SUSPICIOUS_TLD","RISKY_PATTERN","SUSPICIOUS_CONTENT","MALWARE_PATTERN","ALERT_LOOP","AUTH_REQUIRED_LOOP","CREATE_URL_LOOP","EXTENSION_INSTALL","FULL_SCREEN_LOOP","HISTORY_LOOP","NOTIFICATION_LOOP","PRINT_LOOP","ADWARE","REPUTATION","TROJAN","MALVERTISING","WORM","RANSOMWARE","ROOTKIT","BACKDOOR","SPYWARE","ALLOWED_EXCLUSION_VALUE","TSS","SCAM_HEURISTIC","PHISHING_SUSPICIOUS_POST","PHISHING_BANKING","PHISHING_LOGIN","PHISHING_LOGIN_VIA_TUNNEL","TELEMETRY_PHISHING_TUNNEL","AD","ADS","CHROME","FIREFOX","OPERA","EDGE","SAFARI","origins","permissions","optional_permissions","ruleSeparatorRegexInstance","Chrome","Firefox","Edge","Safari","clipboardRead","clipboardWrite","alarms","downloads","storage","tabs","declarativeNetRequest","declarativeNetRequestFeedback","unlimitedStorage","webRequest","contextMenus","nativeMessaging","offscreen","activeTab","ElementHidingSelectors","Actions","RuleType","COMPLEX_OPERATORS_REGEX","ACTION_OPERATORS_REGEX","SelectorParser","parseSelectorContent","content","startIndex","parens","c","substring","end","matchedAction","exec","this","parseActionOperator","raw","index","SyntaxError","hasSelectors","notSelectors","every","rest","input","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","p","chrome","browser","__webpack_public_path__","runtime","getURL","GLOBAL_CONTEXT","self","polyBrowser","idb","indexedDB","message","performance","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","seal","create","apply","construct","Reflect","x","fun","thisValue","args","Func","arrayForEach","unapply","arrayLastIndexOf","lastIndexOf","arrayPop","pop","arrayPush","arraySplice","splice","stringToLowerCase","String","stringToString","toString","stringMatch","stringReplace","stringIndexOf","indexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","func","TypeError","_len2","arguments","_key2","thisArg","lastIndex","_len","_key","addToSet","set","array","transformCaseFunc","l","lcElement","cleanArray","clone","object","newObject","value","constructor","lookupGetter","desc","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","getGlobal","purify","createDOMPurify","DOMPurify","root","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createDocumentFragment","getElementsByTagName","importNode","hooks","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","_","_createTrustedTypesPolicy","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","node","_removeAttribute","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","dirtyPayload","parseFromString","createDocument","innerHTML","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","attributes","namespaceURI","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childClone","__removalCount","parent","parentTagName","Boolean","_checkValidNamespace","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","initValue","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","location","addEventListener","setTimeout","runHeuristicsRulesEditorScript","STORAGE_KEY","HREF","rulesArray","updateRulePreview","rulePreview","JSON","stringify","addRuleButton","getElementById","executeRuleButton","ruleInput","loadRules","removeRules","htmlPreviewContent","urlInput","elementsAreValid","submitRules","ruleObject","ruleString","Error","validateRule","saveRules","localStorage","setItem","savedRules","getItem","parse","removeItem","url","isChild","container","borderColor","borderWidth","borderStyle","setProperty"],"sourceRoot":""}